{"version":3,"sources":["config/conf.js","utils/storage.service.js","utils/https.service.js","context/authContextProvider.js","context/cartContextProvider.js","config/routes.js","components/headerHome.js","utils/cloudinary.service.js","components/productCardMobile.js","components/productTableDesktop.js","components/productCardDesktop.js","components/contentHomePage.js","pages/homePage.js","utils/notification.service.js","pages/loginForm.js","pages/registerForm.js","components/orders.js","pages/ordersForm.js","pages/resetForm.js","pages/adminForm.js","pages/addCategoryForm.js","pages/addItemForm.js","pages/updateItemForm.js","pages/deleteItemForm.js","components/checkout.js","pages/shoppingCartForm.js","hoc/adminGuard.js","hoc/userGuard.js","App.js","index.js"],"names":["config","storageService","key","value","localStorage","setItem","getItem","removeItem","httpsService","url","options","this","makeRequest","method","body","data","accessToken","get","headers","Authorization","axios","conf","then","res","catch","err","refreshToken","response","status","post","set","remove","AuthContext","createContext","AuthContextProvider","children","useState","user","setUser","isLoading","setIsLoading","useEffect","finally","Provider","logout","CartContext","CartContextProvider","shoppingCart","setShoppingCart","isInitiallyFetched","setIsInitiallyFetched","shoppingCartStorage","JSON","parse","stringify","routes","Search","Input","Header","Layout","SubMenu","Menu","HeaderHome","props","parentCategories","useMemo","categories","filter","item","parentId","className","ShoppingCartOutlined","style","color","fontSize","paddingLeft","direction","placeholder","allowClear","onSearch","theme","mode","disabledOverflow","icon","UserOutlined","Item","to","CarOutlined","LogoutOutlined","onClick","count","length","size","ShoppingOutlined","role","display","flexDirection","justifyContent","alignItems","handleItemsChange","map","parentCategory","title","category","onTitleClick","handleSubCategoriesChange","id","background","CloudinaryService","base64EncodedImage","a","public_id","uuidv4","formData","FormData","append","publicId","width","myImage","Cloudinary","cloud","cloudName","image","resize","fit","height","cloudinaryService","ProductCardMobile","useContext","overflow","dataLength","items","next","onMobilePaginationChange","hasMore","marginTop","hoverable","actions","find","product","itemId","type","addToShoppingCart","quantity","cldImg","getProductCardImage","Meta","paddingTop","name","description","price","prefix","precision","ProductTableDesktop","shoppingCartButton","useCallback","record","columns","dataIndex","render","text","getImage","sorter","b","localeCompare","setShowProductCard","setProduct","border","cursor","min","max","defaultValue","onChange","handleQuantityChange","rowKey","dataSource","pagination","pageSize","total","totalItems","hideOnSinglePage","onPaginationChange","current","currentPage","bordered","ProductCardDesktop","ArrowLeftOutlined","flex","offset","ContentHomePage","showProductCard","query","maxWidth","matches","Content","Footer","HomePage","setItems","setCategories","searchValue","setSearchValue","setTotalItems","useSearchParams","searchParams","setSearchParams","setCurrentPage","params","console","log","getCategoryIds","categoryIds","forEach","push","categoryId","rows","newShoppingCart","foundIndex","findIndex","e","keyPath","subId","page","mobileVisible","prevCount","trimmedValue","trim","notificationService","message","duration","notification","LoginForm","navigate","useNavigate","fromPage","useLocation","state","from","pathname","handleLogin","replace","remember","openNotification","values","statusText","initialValues","onFinish","rules","required","LockOutlined","valuePropName","noStyle","htmlType","RegisterForm","handleRegister","Password","Orders","totalOrderSum","order","totalSum","order_item","toFixed","orders","margin","timestamp","createdAt","Date","toString","split","slice","join","address","Option","Select","OrdersForm","setOrders","handleOrderSelect","days","time","span","HomeOutlined","orientation","onSelect","delete","ResetForm","handleReset","AdminForm","block","AddCategoryForm","Form","useForm","form","autoComplete","List","initialValue","fields","add","field","align","shouldUpdate","prevValues","curValues","label","validator","rule","Promise","resolve","reject","Error","MinusCircleOutlined","PlusOutlined","AddItemForm","maxCount","handleImageUpload","info","onSuccess","onError","file","reader","FileReader","readAsDataURL","onloadend","uploadImage","result","handleImageRemove","deleteImage","fileList","customRequest","onRemove","listType","UploadOutlined","Number","UpdateItemForm","put","DeleteItemForm","TextArea","Checkout","borderRadius","ShoppingCartForm","setState","itemsId","index","el","itemsQuantity","totalQuantity","totalShoppingSum","handleItemDelete","splice","handlePlaceOrder","DeleteOutlined","valueStyle","pagesize","AdminGuard","location","UserGuard","App","path","element","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb0a8f48.chunk.js","sourcesContent":["export const config = {\r\n  baseUrl: 'https://ecommerce-shop-stsepanenka.herokuapp.com',\r\n  cloudinaryUrl: 'https://api.cloudinary.com/v1_1/',\r\n  cloudName: 'stepanenkoales',\r\n}\r\n","class StorageService {\r\n  set(key, value) {\r\n    localStorage.setItem(key, value)\r\n  }\r\n\r\n  get(key) {\r\n    return localStorage.getItem(key)\r\n  }\r\n\r\n  remove(key) {\r\n    localStorage.removeItem(key)\r\n  }\r\n}\r\n\r\nexport const storageService = new StorageService()\r\n","import axios from 'axios'\r\nimport { config as conf } from '../config/conf'\r\nimport { storageService } from './storage.service'\r\n\r\nclass HttpsService {\r\n  get(url, options) {\r\n    return this.makeRequest({\r\n      url,\r\n      method: 'GET',\r\n      ...options,\r\n    })\r\n  }\r\n\r\n  post(url, body, options) {\r\n    return this.makeRequest({\r\n      url,\r\n      data: body,\r\n      method: 'POST',\r\n      ...options,\r\n    })\r\n  }\r\n\r\n  put(url, body, options) {\r\n    return this.makeRequest({\r\n      url,\r\n      data: body,\r\n      method: 'PUT',\r\n      ...options,\r\n    })\r\n  }\r\n\r\n  delete(url, body, options) {\r\n    return this.makeRequest({\r\n      url,\r\n      data: body,\r\n      method: 'DELETE',\r\n      ...options,\r\n    })\r\n  }\r\n\r\n  makeRequest(config) {\r\n    const accessToken = storageService.get('accessToken')\r\n\r\n    if (accessToken) {\r\n      config.headers = {\r\n        ...config.headers,\r\n        Authorization: 'Bearer ' + accessToken,\r\n      }\r\n    }\r\n\r\n    return axios({\r\n      ...config,\r\n      url: conf.baseUrl + config.url,\r\n    })\r\n      .then((res) => {\r\n        return res.data\r\n      })\r\n      .catch((err) => {\r\n        const refreshToken = storageService.get('refreshToken')\r\n\r\n        if (err?.response?.status === 401 && refreshToken) {\r\n          return this.post('/user/refresh', { refreshToken })\r\n            .then((res) => {\r\n              storageService.set('accessToken', res.accessToken)\r\n              storageService.set('refreshToken', res.refreshToken)\r\n              return this.makeRequest(config)\r\n            })\r\n            .catch((err) => {\r\n              storageService.remove('accessToken')\r\n              storageService.remove('refreshToken')\r\n\r\n              throw err\r\n            })\r\n        }\r\n\r\n        throw err\r\n      })\r\n  }\r\n}\r\n\r\nexport const httpsService = new HttpsService()\r\n","import { createContext, useEffect, useState } from 'react'\r\nimport { httpsService } from '../utils/https.service'\r\nimport { storageService } from '../utils/storage.service'\r\n\r\nexport const AuthContext = createContext(null)\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (!storageService.get('accessToken')) {\r\n      return\r\n    }\r\n\r\n    setIsLoading(true)\r\n    httpsService\r\n      .get('/user')\r\n      .then((res) => {\r\n        setUser(res)\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false)\r\n      })\r\n  }, [])\r\n\r\n  const logout = () => {\r\n    setUser(null)\r\n    storageService.remove('accessToken')\r\n    storageService.remove('refreshToken')\r\n  }\r\n\r\n  if (isLoading) return null\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","import { createContext, useEffect, useState } from 'react'\r\nimport { storageService } from '../utils/storage.service'\r\n\r\nexport const CartContext = createContext(null)\r\n\r\nexport const CartContextProvider = ({ children }) => {\r\n  const [shoppingCart, setShoppingCart] = useState([])\r\n  const [isInitiallyFetched, setIsInitiallyFetched] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const shoppingCartStorage =\r\n      JSON.parse(storageService.get('shoppingCart')) || []\r\n    setShoppingCart(shoppingCartStorage)\r\n    setIsInitiallyFetched(true)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isInitiallyFetched) {\r\n      storageService.set('shoppingCart', JSON.stringify(shoppingCart))\r\n    }\r\n  }, [shoppingCart, isInitiallyFetched])\r\n\r\n  return (\r\n    <CartContext.Provider value={{ shoppingCart, setShoppingCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  )\r\n}\r\n","export const routes = {\r\n  homePage: '/',\r\n  login: '/login',\r\n  register: '/register',\r\n  reset: '/reset',\r\n  admin: '/admin',\r\n  shoppingCart: 'shopping-cart',\r\n  addCategory: '/admin/add-category',\r\n  addItem: '/admin/add-item',\r\n  updateItem: '/admin/update-item',\r\n  deleteItem: '/admin/delete-item',\r\n  orders: 'orders',\r\n  github: 'https://github.com/stepanenkoales',\r\n}\r\n","import { useMemo } from 'react'\r\nimport { Layout, Menu, Input, Space, Badge } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  ShoppingOutlined,\r\n  ShoppingCartOutlined,\r\n  UserOutlined,\r\n  LogoutOutlined,\r\n  CarOutlined,\r\n} from '@ant-design/icons'\r\nimport { routes } from '../config/routes'\r\nimport '../styles/homePage.scss'\r\n\r\nconst { Search } = Input\r\nconst { Header } = Layout\r\nconst { SubMenu } = Menu\r\n\r\nexport const HeaderHome = (props) => {\r\n  const parentCategories = useMemo(\r\n    () => props.categories.filter((item) => item.parentId === null),\r\n    [props]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <div className=\"menu\">\r\n        <ShoppingCartOutlined\r\n          style={{\r\n            color: '#ffffff',\r\n            fontSize: '2.2em',\r\n            paddingLeft: '15px',\r\n          }}\r\n        />\r\n\r\n        <Space className=\"desktop-visible\" direction=\"vertical\">\r\n          <Search\r\n            className=\"desktop-visible\"\r\n            placeholder=\"input search text\"\r\n            allowClear\r\n            onSearch={props.onSearch}\r\n          />\r\n        </Space>\r\n\r\n        <Menu theme=\"dark\" mode=\"horizontal\" disabledOverflow={true}>\r\n          {props.user ? (\r\n            <SubMenu\r\n              key=\"sub\"\r\n              icon={\r\n                <UserOutlined\r\n                  style={{\r\n                    fontSize: '1.5em',\r\n                  }}\r\n                />\r\n              }\r\n            >\r\n              <Menu.Item key=\"sub1\">\r\n                <Link to={routes.orders}>\r\n                  <CarOutlined />\r\n                  <span>Orders</span>\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"sub2\">\r\n                <LogoutOutlined />\r\n                <span onClick={props.logout}>Logout</span>\r\n              </Menu.Item>\r\n            </SubMenu>\r\n          ) : (\r\n            <Menu.Item key=\"1\">\r\n              <Link to={routes.login}>Login</Link>\r\n            </Menu.Item>\r\n          )}\r\n          <Menu.Item key=\"2\">\r\n            <Link to={routes.shoppingCart}>\r\n              <Badge\r\n                count={props.shoppingCart.length}\r\n                color=\"#a52a2a\"\r\n                size=\"small\"\r\n              >\r\n                <ShoppingOutlined\r\n                  style={{\r\n                    color: '#ffffff',\r\n                    fontSize: '1.7em',\r\n                  }}\r\n                />\r\n              </Badge>\r\n            </Link>\r\n          </Menu.Item>\r\n          {props.user?.role === 'admin' && (\r\n            <Menu.Item key=\"3\">\r\n              <Link to={routes.admin}>Admin</Link>\r\n            </Menu.Item>\r\n          )}\r\n        </Menu>\r\n      </div>\r\n\r\n      <Header>\r\n        <Menu\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n          onClick={props.handleItemsChange}\r\n          theme=\"dark\"\r\n          mode=\"horizontal\"\r\n        >\r\n          {parentCategories.map((parentCategory) => (\r\n            <SubMenu\r\n              key={parentCategory.id}\r\n              title={parentCategory.category}\r\n              onTitleClick={props.handleSubCategoriesChange}\r\n            >\r\n              {props.categories\r\n                .filter((category) => category.parentId === parentCategory.id)\r\n                .map((category) => (\r\n                  <Menu.Item style={{ background: 'red' }} key={category.id}>\r\n                    {category.category}\r\n                  </Menu.Item>\r\n                ))}\r\n            </SubMenu>\r\n          ))}\r\n        </Menu>\r\n      </Header>\r\n\r\n      <Header className=\"mobile-visible\">\r\n        <Space className=\"mobile-visible-space\" direction=\"vertical\">\r\n          <Search\r\n            placeholder=\"input search text\"\r\n            allowClear\r\n            onSearch={props.onSearch}\r\n          />\r\n        </Space>\r\n      </Header>\r\n    </>\r\n  )\r\n}\r\n","import { Cloudinary } from '@cloudinary/url-gen'\r\nimport { fit } from '@cloudinary/url-gen/actions/resize'\r\nimport { httpsService } from './https.service'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { config } from '../config/conf'\r\n\r\nclass CloudinaryService {\r\n  async uploadImage(base64EncodedImage) {\r\n    const public_id = uuidv4()\r\n    const formData = new FormData()\r\n    formData.append('file', base64EncodedImage)\r\n    formData.append('public_id', public_id)\r\n    return await httpsService.post('/cloudinary/upload', formData, {\r\n      headers: { 'Content-Type': 'multipart/form-data' },\r\n    })\r\n  }\r\n\r\n  deleteImage(public_id) {\r\n    return httpsService.post('/cloudinary/delete', { public_id })\r\n  }\r\n\r\n  getProductCardImage(publicId, width) {\r\n    const cld = new Cloudinary({\r\n      cloud: {\r\n        cloudName: config.cloudName,\r\n      },\r\n    })\r\n    const myImage = cld.image(publicId)\r\n    myImage.resize(fit().width(width ? width : 150))\r\n\r\n    return myImage\r\n  }\r\n\r\n  getImage(publicId) {\r\n    const cld = new Cloudinary({\r\n      cloud: {\r\n        cloudName: config.cloudName,\r\n      },\r\n    })\r\n    const myImage = cld.image(publicId)\r\n    myImage.resize(fit().height(140))\r\n\r\n    return myImage\r\n  }\r\n}\r\n\r\nexport const cloudinaryService = new CloudinaryService()\r\n","import InfiniteScroll from 'react-infinite-scroll-component'\r\nimport { Card, Button, Statistic } from 'antd'\r\nimport { AdvancedImage } from '@cloudinary/react'\r\nimport { cloudinaryService } from '../utils/cloudinary.service'\r\nimport { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { CartContext } from '../context/cartContextProvider'\r\nimport { routes } from '../config/routes'\r\n\r\nexport const ProductCardMobile = (props) => {\r\n  const { shoppingCart } = useContext(CartContext)\r\n\r\n  const shoppingCartButton = (id) => {\r\n    if (shoppingCart.find((product) => product.itemId === id)) {\r\n      return (\r\n        <Button type=\"ghost\">\r\n          <Link to={routes.shoppingCart}>Added to Cart</Link>\r\n        </Button>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Button\r\n        onClick={() =>\r\n          props.addToShoppingCart({\r\n            itemId: id,\r\n            quantity: 1,\r\n          })\r\n        }\r\n        type=\"ghost\"\r\n      >\r\n        Add to Cart\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ overflow: 'auto' }}>\r\n        <InfiniteScroll\r\n          dataLength={props.items.length}\r\n          next={props.onMobilePaginationChange}\r\n          hasMore={true}\r\n        >\r\n          {props.items.map((item) => (\r\n            <Card\r\n              key={item.id}\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n              hoverable\r\n              actions={[shoppingCartButton(item.id)]}\r\n            >\r\n              <AdvancedImage\r\n                cldImg={cloudinaryService.getProductCardImage(item.image)}\r\n              />\r\n              <Card.Meta\r\n                style={{ paddingTop: '10px' }}\r\n                title={item.name}\r\n                description={item.description}\r\n              />\r\n              <Statistic\r\n                style={{ paddingTop: '10px' }}\r\n                value={item.price}\r\n                prefix={'$'}\r\n                precision={2}\r\n              />\r\n            </Card>\r\n          ))}\r\n        </InfiniteScroll>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useMemo, useContext, useCallback } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { cloudinaryService } from '../utils/cloudinary.service'\r\nimport { AdvancedImage } from '@cloudinary/react'\r\nimport { Table, Button, InputNumber } from 'antd'\r\nimport { ShoppingOutlined } from '@ant-design/icons'\r\nimport { CartContext } from '../context/cartContextProvider'\r\nimport { routes } from '../config/routes'\r\nimport '../styles/homePage.scss'\r\n\r\nexport const ProductTableDesktop = (props) => {\r\n  const { shoppingCart } = useContext(CartContext)\r\n\r\n  const onTableKeyChange = (items) => items.id\r\n\r\n  const shoppingCartButton = useCallback(\r\n    (record) => {\r\n      if (shoppingCart.find((product) => product.itemId === record.id)) {\r\n        return (\r\n          <Button type=\"ghost\">\r\n            <Link to={routes.shoppingCart}>Added to Cart</Link>\r\n          </Button>\r\n        )\r\n      }\r\n\r\n      return (\r\n        <Button\r\n          onClick={() =>\r\n            props.addToShoppingCart({\r\n              itemId: record.id,\r\n              quantity: record.quantity ? record.quantity : 1,\r\n            })\r\n          }\r\n          type=\"link\"\r\n        >\r\n          <ShoppingOutlined\r\n            style={{\r\n              color: '#0f0f0f',\r\n              fontSize: '1.4em',\r\n            }}\r\n          />\r\n        </Button>\r\n      )\r\n    },\r\n    [props, shoppingCart]\r\n  )\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: '',\r\n        dataIndex: 'image',\r\n        render: (text, record) => (\r\n          <AdvancedImage cldImg={cloudinaryService.getImage(record.image)} />\r\n        ),\r\n      },\r\n      {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        sorter: (a, b) => a.name.localeCompare(b.name),\r\n        render: (text, record) => (\r\n          <div\r\n            onClick={() => {\r\n              props.setShowProductCard(true)\r\n              props.setProduct(record)\r\n            }}\r\n            style={{\r\n              border: 'none',\r\n              background: 'white',\r\n              cursor: 'pointer',\r\n              color: '#1890ff',\r\n            }}\r\n          >\r\n            {record.name}\r\n          </div>\r\n        ),\r\n      },\r\n      {\r\n        title: 'Description',\r\n        dataIndex: 'description',\r\n      },\r\n      {\r\n        title: 'Price',\r\n        dataIndex: 'price',\r\n        sorter: (a, b) => a.price - b.price,\r\n      },\r\n      {\r\n        title: 'Quantity',\r\n        dataIndex: 'quantity',\r\n        render: (text, record) => (\r\n          <>\r\n            <InputNumber\r\n              min={1}\r\n              max={10}\r\n              defaultValue={1}\r\n              onChange={(quantity) =>\r\n                props.handleQuantityChange(quantity, record.id)\r\n              }\r\n            />\r\n          </>\r\n        ),\r\n      },\r\n      {\r\n        title: '',\r\n        dataIndex: '',\r\n        render: (text, record) => shoppingCartButton(record),\r\n      },\r\n    ],\r\n    [props, shoppingCartButton]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        className=\"product-table-desktop\"\r\n        rowKey={onTableKeyChange}\r\n        columns={columns}\r\n        dataSource={props.items}\r\n        pagination={{\r\n          pageSize: 5,\r\n          total: props.totalItems,\r\n          hideOnSinglePage: true,\r\n          onChange: props.onPaginationChange,\r\n          current: props.currentPage,\r\n        }}\r\n        size=\"small\"\r\n        bordered={true}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import { Card, Button, Statistic, Row, Col, Divider } from 'antd'\r\nimport { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { AdvancedImage } from '@cloudinary/react'\r\nimport { cloudinaryService } from '../utils/cloudinary.service'\r\nimport { ArrowLeftOutlined } from '@ant-design/icons'\r\nimport { CartContext } from '../context/cartContextProvider'\r\nimport { routes } from '../config/routes'\r\n\r\nexport const ProductCardDesktop = (props) => {\r\n  const { shoppingCart } = useContext(CartContext)\r\n\r\n  const shoppingCartButton = () => {\r\n    if (shoppingCart.find((product) => product.itemId === props.product.id)) {\r\n      return (\r\n        <Button type=\"ghost\">\r\n          <Link to={routes.shoppingCart}>Added to Cart</Link>\r\n        </Button>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Button\r\n        onClick={() =>\r\n          props.addToShoppingCart({\r\n            itemId: props.product.id,\r\n            quantity: 1,\r\n          })\r\n        }\r\n        type=\"ghost\"\r\n      >\r\n        Add to Cart\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n      }}\r\n    >\r\n      <Card\r\n        style={{\r\n          marginTop: '40px',\r\n          width: '60%',\r\n          fontSize: '16px',\r\n        }}\r\n        title={props.product.name}\r\n        bordered={false}\r\n        hoverable\r\n        actions={[\r\n          <Button onClick={() => props.setShowProductCard(false)} type=\"link\">\r\n            <ArrowLeftOutlined />\r\n            back to Products\r\n          </Button>,\r\n          shoppingCartButton(),\r\n        ]}\r\n      >\r\n        <Row>\r\n          <Col flex={3}>\r\n            <AdvancedImage\r\n              cldImg={cloudinaryService.getProductCardImage(\r\n                props.product.image,\r\n                200\r\n              )}\r\n            />\r\n          </Col>\r\n          <Col offset={2} flex={2}>\r\n            <Statistic\r\n              style={{ paddingTop: '10px', fontSize: '16px' }}\r\n              value={props.product.price}\r\n              prefix={'$'}\r\n              precision={2}\r\n            />\r\n            <Divider />\r\n            <p>{props.product.description}</p>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\nimport { ProductCardMobile } from './productCardMobile'\r\nimport { ProductTableDesktop } from './productTableDesktop'\r\nimport { ProductCardDesktop } from './productCardDesktop'\r\nimport Media from 'react-media'\r\n\r\nexport const ContentHomePage = (props) => {\r\n  const [product, setProduct] = useState(null)\r\n\r\n  if (props.showProductCard) {\r\n    return (\r\n      <ProductCardDesktop\r\n        product={product}\r\n        addToShoppingCart={props.addToShoppingCart}\r\n        setShowProductCard={props.setShowProductCard}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Media query={{ maxWidth: 575 }}>\r\n      {(matches) =>\r\n        matches ? (\r\n          <ProductCardMobile\r\n            items={props.items}\r\n            totalItems={props.totalItems}\r\n            addToShoppingCart={props.addToShoppingCart}\r\n            onMobilePaginationChange={props.onMobilePaginationChange}\r\n          />\r\n        ) : (\r\n          <ProductTableDesktop\r\n            setShowProductCard={props.setShowProductCard}\r\n            setProduct={setProduct}\r\n            items={props.items}\r\n            totalItems={props.totalItems}\r\n            onPaginationChange={props.onPaginationChange}\r\n            currentPage={props.currentPage}\r\n            handleQuantityChange={props.handleQuantityChange}\r\n            addToShoppingCart={props.addToShoppingCart}\r\n          />\r\n        )\r\n      }\r\n    </Media>\r\n  )\r\n}\r\n","import { useState, useEffect, useCallback, useContext } from 'react'\r\nimport { Link, useSearchParams } from 'react-router-dom'\r\nimport { Layout } from 'antd'\r\nimport { AuthContext } from '../context/authContextProvider'\r\nimport { CartContext } from '../context/cartContextProvider'\r\nimport { routes } from '../config/routes'\r\nimport { httpsService } from '../utils/https.service'\r\nimport { HeaderHome } from '../components/headerHome'\r\nimport { ContentHomePage } from '../components/contentHomePage'\r\nimport '../styles/homePage.scss'\r\n\r\nconst { Header, Content, Footer } = Layout\r\n\r\nexport const HomePage = () => {\r\n  const [items, setItems] = useState([])\r\n  const [categories, setCategories] = useState([])\r\n  const [searchValue, setSearchValue] = useState(null) // change to useSearchParams\r\n  const [totalItems, setTotalItems] = useState(0)\r\n  const [searchParams, setSearchParams] = useSearchParams()\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [showProductCard, setShowProductCard] = useState(false)\r\n  const { user, logout } = useContext(AuthContext)\r\n  const { shoppingCart, setShoppingCart } = useContext(CartContext)\r\n\r\n  useEffect(() => {\r\n    httpsService\r\n      .get('/categories/', {\r\n        params: {\r\n          name: 'all',\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setCategories(res)\r\n      })\r\n      .catch((err) => console.log(err))\r\n    return () => {\r\n      setCategories([])\r\n    }\r\n  }, [])\r\n\r\n  const getCategoryIds = useCallback(\r\n    (id) => {\r\n      let categoryIds = []\r\n      const filteredCategories = categories.filter(\r\n        (category) => category.parentId === id\r\n      )\r\n      filteredCategories.forEach((category) => categoryIds.push(category.id))\r\n      return categoryIds\r\n    },\r\n    [categories]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (searchParams.get('subId')) {\r\n      return httpsService\r\n        .get('/items', {\r\n          params: {\r\n            categoryId: searchParams.get('subId'),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          setItems(res.rows)\r\n          setTotalItems(res.count)\r\n        })\r\n        .catch((err) => console.log(err))\r\n    }\r\n\r\n    if (searchParams.get('id')) {\r\n      const categoryIds = getCategoryIds(searchParams.get('id'))\r\n\r\n      if (categoryIds.length === 0) return\r\n\r\n      httpsService\r\n        .post('/items/id', {\r\n          categoryId: categoryIds,\r\n        })\r\n        .then((res) => {\r\n          setItems(res.rows)\r\n          setTotalItems(res.count)\r\n        })\r\n        .catch((err) => console.log(err))\r\n    }\r\n  }, [getCategoryIds, searchParams])\r\n\r\n  const addToShoppingCart = useCallback(\r\n    (newShoppingCart) => {\r\n      const foundIndex = shoppingCart.findIndex(\r\n        (item) => item.itemId === newShoppingCart.itemId\r\n      )\r\n\r\n      if (foundIndex >= 0) {\r\n        shoppingCart[foundIndex].quantity = ++shoppingCart[foundIndex].quantity\r\n        setShoppingCart([...shoppingCart])\r\n        return\r\n      }\r\n\r\n      setShoppingCart([...shoppingCart, newShoppingCart])\r\n    },\r\n    [shoppingCart, setShoppingCart]\r\n  )\r\n\r\n  const handleSubCategoriesChange = useCallback(\r\n    async (e) => {\r\n      setShowProductCard(false)\r\n      setCurrentPage(1)\r\n      setSearchParams({ id: e.key })\r\n      setSearchValue(null)\r\n      const categoryIds = getCategoryIds(e.key)\r\n\r\n      if (categoryIds.length === 0) {\r\n        setItems([])\r\n        setTotalItems(0)\r\n        return\r\n      }\r\n\r\n      const response = await httpsService.post('/items/id', {\r\n        categoryId: categoryIds,\r\n      })\r\n\r\n      const { rows, count } = response\r\n\r\n      setItems(rows)\r\n      setTotalItems(count)\r\n    },\r\n    [setSearchParams, getCategoryIds]\r\n  )\r\n\r\n  const handleItemsChange = async (e) => {\r\n    setShowProductCard(false)\r\n    setCurrentPage(1)\r\n    setSearchParams({ id: e.keyPath[1], subId: e.keyPath[0] })\r\n    setSearchValue(null)\r\n\r\n    const response = await httpsService.get('/items/', {\r\n      params: {\r\n        categoryId: e.key,\r\n      },\r\n    })\r\n    const { rows, count } = response\r\n\r\n    setItems(rows)\r\n    setTotalItems(count)\r\n  }\r\n\r\n  const onPaginationChange = async (page, pageSize, mobileVisible) => {\r\n    setCurrentPage(page)\r\n    const categoryIds = getCategoryIds(searchParams.get('id'))\r\n\r\n    const response = await httpsService.get('/items/', {\r\n      params: {\r\n        categoryId: searchParams.get('subId') || categoryIds,\r\n        currentPage: page,\r\n        pageSize: pageSize,\r\n        name: searchValue,\r\n      },\r\n    })\r\n    const { rows } = response\r\n\r\n    if (mobileVisible) return setItems([...items, ...rows])\r\n\r\n    setItems(rows)\r\n  }\r\n\r\n  const onMobilePaginationChange = async () => {\r\n    const categoryIds = getCategoryIds(searchParams.get('id'))\r\n    const response = await httpsService.get('/items/', {\r\n      params: {\r\n        categoryId: searchParams.get('subId') || categoryIds,\r\n        currentPage: currentPage + 1,\r\n        pageSize: 5,\r\n        name: searchValue,\r\n      },\r\n    })\r\n    const { rows, count } = response\r\n\r\n    setTotalItems(count)\r\n    setCurrentPage((prevCount) => prevCount + 1)\r\n    setItems([...items, ...rows])\r\n  }\r\n\r\n  const onSearch = async (value) => {\r\n    const trimmedValue = value.trim()\r\n\r\n    if (!trimmedValue) {\r\n      return null\r\n    }\r\n\r\n    setSearchValue(trimmedValue)\r\n    const categoryIds = searchParams.get('id')\r\n      ? getCategoryIds(searchParams.get('id'))\r\n      : null\r\n\r\n    const response = await httpsService.post('/items/id', {\r\n      categoryId: searchParams.get('subId') || categoryIds,\r\n      name: trimmedValue,\r\n    })\r\n    const { rows, count } = response\r\n\r\n    setItems(rows)\r\n    setTotalItems(count)\r\n  }\r\n\r\n  const handleQuantityChange = useCallback(\r\n    (quantity, itemId) => {\r\n      const foundIndex = items.findIndex((item) => item.id === itemId)\r\n\r\n      if (foundIndex >= 0) {\r\n        items[foundIndex].quantity = quantity\r\n        setItems([...items])\r\n      }\r\n    },\r\n    [items]\r\n  )\r\n\r\n  return (\r\n    <Layout>\r\n      <Header>\r\n        <HeaderHome\r\n          onSearch={onSearch}\r\n          shoppingCart={shoppingCart}\r\n          categories={categories}\r\n          handleItemsChange={handleItemsChange}\r\n          handleSubCategoriesChange={handleSubCategoriesChange}\r\n          user={user}\r\n          logout={logout}\r\n        />\r\n      </Header>\r\n      <Content>\r\n        <div className=\"content\">\r\n          <ContentHomePage\r\n            showProductCard={showProductCard}\r\n            setShowProductCard={setShowProductCard}\r\n            items={items}\r\n            totalItems={totalItems}\r\n            onPaginationChange={onPaginationChange}\r\n            currentPage={currentPage}\r\n            handleQuantityChange={handleQuantityChange}\r\n            addToShoppingCart={addToShoppingCart}\r\n            onMobilePaginationChange={onMobilePaginationChange}\r\n          />\r\n        </div>\r\n      </Content>\r\n      <Footer>\r\n        Please visit my\r\n        <Link to={routes.github}> github</Link>\r\n      </Footer>\r\n    </Layout>\r\n  )\r\n}\r\n","import { notification } from 'antd'\r\n\r\nclass NotificationService {\r\n  openNotification({ type, message = '', description, duration }) {\r\n    notification[type]({\r\n      message: `${type}: ${message}`,\r\n      description,\r\n      duration,\r\n    })\r\n  }\r\n}\r\nexport const notificationService = new NotificationService()\r\n","import { Form, Input, Button, Checkbox } from 'antd'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport { routes } from '../config/routes'\r\nimport { httpsService } from '../utils/https.service'\r\nimport { storageService } from '../utils/storage.service'\r\nimport { notificationService } from '../utils/notification.service'\r\nimport '../styles/loginForm.scss'\r\n\r\nexport const LoginForm = () => {\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  const fromPage = location.state?.from?.pathname || routes.homePage\r\n\r\n  const handleLogin = async (body) => {\r\n    try {\r\n      const response = await httpsService.post('/user/login', body)\r\n      const { accessToken, refreshToken } = response\r\n      storageService.set('accessToken', accessToken)\r\n      navigate(fromPage, { replace: true })\r\n      body.remember\r\n        ? storageService.set('refreshToken', refreshToken)\r\n        : storageService.set('refreshToken', null)\r\n      notificationService.openNotification({\r\n        type: 'success',\r\n        description: 'You are logged in!',\r\n        duration: 6,\r\n      })\r\n    } catch (err) {\r\n      const values = {\r\n        type: 'error',\r\n        message: err.response.statusText,\r\n        description: err.response.data.message,\r\n        duration: 6,\r\n      }\r\n\r\n      switch (err.response.status) {\r\n        case 400:\r\n          notificationService.openNotification(values)\r\n          break\r\n        case 401:\r\n          values.description = 'Please login!'\r\n          notificationService.openNotification(values)\r\n          break\r\n        default:\r\n          values.description = err.response.data.message\r\n          notificationService.openNotification(values)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Form\r\n        name=\"login\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={handleLogin}\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          className=\"input\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid Email!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your Email!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Email\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          className=\"input\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your Password!',\r\n            },\r\n            {\r\n              type: 'string',\r\n              min: 9,\r\n              message: 'Password must be at least 9 characters',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n            <Checkbox>Remember me</Checkbox>\r\n          </Form.Item>\r\n          <Link to={routes.reset}>Forgot password</Link>\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            Login\r\n          </Button>\r\n          <div className=\"footer-text\">\r\n            <p>\r\n              Don't have an account yet?\r\n              <Link to={routes.register}> Register</Link>\r\n            </p>\r\n            <p>\r\n              return to <Link to={routes.homePage}>Homepage</Link>\r\n            </p>\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import { Form, Input, Button } from 'antd'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\r\nimport { routes } from '../config/routes'\r\nimport { httpsService } from '../utils/https.service'\r\nimport { notificationService } from '../utils/notification.service'\r\nimport '../styles/registerForm.scss'\r\n\r\nexport const RegisterForm = () => {\r\n  const navigate = useNavigate()\r\n\r\n  const handleRegister = async (body) => {\r\n    try {\r\n      await httpsService.post('/user', body)\r\n      notificationService.openNotification({\r\n        type: 'info',\r\n        description:\r\n          'In order to complete the login, please click the link in the email we just sent!',\r\n        duration: 10,\r\n      })\r\n      navigate(routes.login)\r\n    } catch (err) {\r\n      notificationService.openNotification({\r\n        type: 'error',\r\n        message: err.response.statusText,\r\n        description: err.response.data.message,\r\n        duration: 6,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Form name=\"register-form\" onFinish={handleRegister}>\r\n        <Form.Item\r\n          name=\"email\"\r\n          className=\"custom-email-input\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid Email!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your Email!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Email\" prefix={<UserOutlined />} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          className=\"input\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your password!',\r\n            },\r\n            {\r\n              type: 'string',\r\n              min: 9,\r\n              message: 'Password must be at least 9 characters',\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password placeholder=\"Password\" prefix={<LockOutlined />} />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"register-button\">\r\n            Register\r\n          </Button>\r\n          <p>\r\n            return to <Link to={routes.homePage}>Homepage</Link>\r\n          </p>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import { Button, Card, Statistic } from 'antd'\r\n\r\nexport const Orders = (props) => {\r\n  const totalOrderSum = (order) => {\r\n    let totalSum = 0\r\n    order.items.forEach((item) => {\r\n      totalSum += item.order_item.price * item.order_item.quantity\r\n    })\r\n\r\n    return totalSum.toFixed(2)\r\n  }\r\n\r\n  const getDate = (timestamp) => {\r\n    const date = new Date(timestamp).toString()\r\n    return date.split(' ').slice(1, 5).join(' ')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {props.orders.map((order) => (\r\n        <Card\r\n          style={{ margin: '20px' }}\r\n          key={order.id}\r\n          title={`Order placed ${getDate(order.createdAt)}`}\r\n        >\r\n          <br></br>\r\n          <p>{`Status: ${order.status}`}</p>\r\n          <p>{`Ship to: ${order.address}`}</p>\r\n          <Statistic\r\n            title={'Total'}\r\n            value={totalOrderSum(order)}\r\n            prefix={'$'}\r\n            precision={2}\r\n          />\r\n          {order.items.map((item) => (\r\n            <Card\r\n              key={item.id}\r\n              type=\"inner\"\r\n              style={{ marginTop: '16px' }}\r\n              hoverable\r\n            >\r\n              <Card.Meta title={item.name} description={item.description} />\r\n              <br></br>\r\n              <p>{`Quantity: ${item.order_item.quantity}`}</p>\r\n              <p>{`Sale Price: ${item.order_item.price}`}</p>\r\n            </Card>\r\n          ))}\r\n          {order.status === 'pending' && (\r\n            <Button\r\n              type=\"primary\"\r\n              style={{ marginTop: 16 }}\r\n              onClick={() => props.onClick(order.id)}\r\n            >\r\n              Cancel Order\r\n            </Button>\r\n          )}\r\n        </Card>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect, useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { LogoutOutlined, HomeOutlined } from '@ant-design/icons'\r\nimport { Layout, Menu, Row, Col, Divider, Select } from 'antd'\r\nimport { Orders } from '../components/orders'\r\nimport { AuthContext } from '../context/authContextProvider'\r\nimport { routes } from '../config/routes'\r\nimport { httpsService } from '../utils/https.service'\r\nimport '../styles/ordersForm.scss'\r\n\r\nconst { Content } = Layout\r\nconst { Option } = Select\r\n\r\nexport const OrdersForm = () => {\r\n  const [orders, setOrders] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { logout } = useContext(AuthContext)\r\n\r\n  useEffect(() => {\r\n    httpsService\r\n      .get('/order')\r\n      .then((res) => {\r\n        setOrders(res)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n      .finally(() => setIsLoading(true))\r\n  }, [])\r\n\r\n  const ordersQuantity = () => {\r\n    if (orders.length === 1) {\r\n      return '1 order'\r\n    }\r\n\r\n    return `${orders.length} orders`\r\n  }\r\n\r\n  const handleOrderCancel = (id) => {\r\n    httpsService\r\n      .delete('/order', { id })\r\n      .then((res) => {\r\n        handleOrderSelect()\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  const handleOrderSelect = (days) => {\r\n    if (!days) {\r\n      return httpsService\r\n        .get('/order')\r\n        .then((res) => {\r\n          setOrders(res)\r\n        })\r\n        .catch((err) => console.log(err))\r\n    }\r\n\r\n    httpsService\r\n      .get('/order', { params: { time: days * 24 * 60 * 60 * 1000 } })\r\n      .then((res) => {\r\n        setOrders(res)\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  if (!isLoading) return null\r\n\r\n  return (\r\n    <div>\r\n      <Layout style={{ marginTop: '150px' }}>\r\n        <Content>\r\n          <Row>\r\n            <Col span={8}>\r\n              <div className=\"orders-left-menu\">\r\n                <Menu mode=\"vertical\">\r\n                  <Menu.Item key=\"1\">\r\n                    <Link to={routes.homePage}>\r\n                      <HomeOutlined />\r\n                      <span>Home</span>\r\n                    </Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key=\"2\">\r\n                    <LogoutOutlined />\r\n                    <span onClick={logout}>Logout</span>\r\n                  </Menu.Item>\r\n                </Menu>\r\n              </div>\r\n            </Col>\r\n            <Col span={12}>\r\n              <h1>Your Orders</h1>\r\n\r\n              <Divider orientation=\"left\">\r\n                {`${ordersQuantity()} placed in `}\r\n                <Select defaultValue=\"\" onSelect={handleOrderSelect}>\r\n                  <Option value=\"\">at all time</Option>\r\n                  <Option value=\"30\">last 30 days</Option>\r\n                  <Option value=\"90\">past 3 months</Option>\r\n                  <Option value=\"180\">past 6 months</Option>\r\n                </Select>\r\n              </Divider>\r\n\r\n              {orders.length > 0 ? (\r\n                <Orders onClick={handleOrderCancel} orders={orders} />\r\n              ) : (\r\n                <div>\r\n                  <h3>\r\n                    You have not placed any orders. Please choose another\r\n                    period!\r\n                  </h3>\r\n                </div>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Content>\r\n      </Layout>\r\n    </div>\r\n  )\r\n}\r\n","import { Form, Input, Button } from 'antd'\r\nimport { UserOutlined } from '@ant-design/icons'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { routes } from '../config/routes'\r\nimport { httpsService } from '../utils/https.service'\r\nimport { notificationService } from '../utils/notification.service'\r\nimport '../styles/resetForm.scss'\r\n\r\nexport const ResetForm = () => {\r\n  const navigate = useNavigate()\r\n\r\n  const handleReset = async (body) => {\r\n    try {\r\n      await httpsService.post('/user/reset', body)\r\n      notificationService.openNotification({\r\n        type: 'info',\r\n        description: 'New password was sent to your email.',\r\n        duration: 10,\r\n      })\r\n      navigate(routes.login)\r\n    } catch (err) {\r\n      notificationService.openNotification({\r\n        type: 'error',\r\n        message: err.response.statusText,\r\n        description: err.response.data.message,\r\n        duration: 10,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Form name=\"reset-form\" onFinish={handleReset}>\r\n        <div>\r\n          <h2>Having trouble logging in?</h2>\r\n          <p>Enter your email to get started</p>\r\n        </div>\r\n        <Form.Item\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid Email!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your Email!',\r\n            },\r\n          ]}\r\n          className=\"email-field\"\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Email\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"reset-button\">\r\n            Reset password\r\n          </Button>\r\n          <div>\r\n            return to <Link to={routes.login}>Login</Link>\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import { Button } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { routes } from '../config/routes'\r\nimport { ArrowLeftOutlined } from '@ant-design/icons'\r\nimport '../styles/adminForm.scss'\r\n\r\nexport const AdminForm = () => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Button type=\"primary\" block>\r\n        <Link to={routes.addCategory}>Add Category</Link>\r\n      </Button>\r\n      <Button type=\"primary\" block>\r\n        <Link to={routes.addItem}>Add Item</Link>\r\n      </Button>\r\n      <Button type=\"primary\" block>\r\n        <Link to={routes.updateItem}>Update Item</Link>\r\n      </Button>\r\n      <Button type=\"primary\" block>\r\n        <Link to={routes.deleteItem}>Delete Item</Link>\r\n      </Button>\r\n      <Button type=\"link\" block>\r\n        <Link to={routes.homePage}>\r\n          <ArrowLeftOutlined /> back to Home Page\r\n        </Link>\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { routes } from '../config/routes'\r\nimport { Form, Input, Button, Space, Select } from 'antd'\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons'\r\nimport { notificationService } from '../utils/notification.service'\r\nimport { httpsService } from '../utils/https.service'\r\nimport '../styles/adminForm.scss'\r\n\r\nconst { Option } = Select\r\n\r\nexport const AddCategoryForm = () => {\r\n  const [categories, setCategories] = useState([])\r\n  const [form] = Form.useForm()\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    httpsService\r\n      .get('/categories/', {\r\n        params: {\r\n          name: 'parent',\r\n        },\r\n      })\r\n      .then((res) => {\r\n        res.push({ id: null, category: 'no category' })\r\n        setCategories(res)\r\n      })\r\n  }, [])\r\n\r\n  const onFinish = async (values) => {\r\n    values.category.forEach((item) => {\r\n      item.category = item.category.trim()\r\n    })\r\n\r\n    try {\r\n      await httpsService.post('/categories', values.category)\r\n      notificationService.openNotification({\r\n        type: 'success',\r\n        description: 'Categories has been successfully added!',\r\n        duration: 10,\r\n      })\r\n      navigate(routes.admin)\r\n    } catch (error) {\r\n      const err = error?.response?.data?.message\r\n\r\n      if (err) {\r\n        return notificationService.openNotification({\r\n          type: 'error',\r\n          message: `${err.message}!`,\r\n          description: `${err.type} on name: ${err.value}`,\r\n          duration: 20,\r\n        })\r\n      }\r\n\r\n      notificationService.openNotification({\r\n        type: 'error',\r\n        message: 'invalid data type',\r\n        duration: 20,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-admin\">\r\n      <Form\r\n        form={form}\r\n        name=\"dynamic_form_nest_item\"\r\n        onFinish={onFinish}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.List name=\"category\" initialValue={[{}]}>\r\n          {(fields, { add, remove }) => (\r\n            <>\r\n              {fields.map((field) => (\r\n                <Space key={field.key} align=\"baseline\">\r\n                  <Form.Item\r\n                    noStyle\r\n                    shouldUpdate={(prevValues, curValues) =>\r\n                      prevValues.categories !== curValues.categories\r\n                    }\r\n                  >\r\n                    {() => (\r\n                      <Form.Item\r\n                        {...field}\r\n                        label=\"Parent\"\r\n                        name={[field.name, 'parentId']}\r\n                      >\r\n                        <Select>\r\n                          {categories.map((item) => (\r\n                            <Option key={item.category} value={item.id}>\r\n                              {item.category}\r\n                            </Option>\r\n                          ))}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    )}\r\n                  </Form.Item>\r\n\r\n                  <Form.Item\r\n                    {...field}\r\n                    label=\"Category\"\r\n                    name={[field.name, 'category']}\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Missing category',\r\n                        validator: (rule, value) => {\r\n                          if (!value.trim()) {\r\n                            return Promise.reject(new Error())\r\n                          }\r\n                          return Promise.resolve()\r\n                        },\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n\r\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                </Space>\r\n              ))}\r\n\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"dashed\"\r\n                  onClick={() => add()}\r\n                  block\r\n                  icon={<PlusOutlined />}\r\n                >\r\n                  Add category\r\n                </Button>\r\n              </Form.Item>\r\n            </>\r\n          )}\r\n        </Form.List>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"admin-button\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" block>\r\n            <Link to={routes.admin}>Admin Panel</Link>\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { routes } from '../config/routes'\r\nimport { httpsService } from '../utils/https.service'\r\nimport { cloudinaryService } from '../utils/cloudinary.service'\r\nimport { notificationService } from '../utils/notification.service'\r\nimport { Form, Input, Button, Space, Select, Upload } from 'antd'\r\nimport {\r\n  MinusCircleOutlined,\r\n  PlusOutlined,\r\n  UploadOutlined,\r\n} from '@ant-design/icons'\r\n\r\nimport '../styles/adminForm.scss'\r\n\r\nconst { Option } = Select\r\n\r\nexport const AddItemForm = () => {\r\n  const [form] = Form.useForm()\r\n  const [categories, setCategories] = useState([])\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    httpsService\r\n      .get('/categories/', {\r\n        params: {\r\n          name: 'subcategory',\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setCategories(res)\r\n      })\r\n  }, [])\r\n\r\n  const props = {\r\n    maxCount: 1,\r\n  }\r\n\r\n  const handleImageUpload = async (info) => {\r\n    const { onSuccess, onError, file } = info\r\n\r\n    const reader = new FileReader()\r\n    reader.readAsDataURL(file)\r\n    reader.onloadend = async () => {\r\n      try {\r\n        const response = await cloudinaryService.uploadImage(reader.result)\r\n\r\n        onSuccess({\r\n          url: 'url',\r\n          public_id: response,\r\n        })\r\n      } catch (err) {\r\n        onError(err)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleImageRemove = async (info) => {\r\n    try {\r\n      const response = await cloudinaryService.deleteImage(\r\n        info?.response?.public_id\r\n      )\r\n\r\n      if (response.result !== 'ok') {\r\n        throw new Error('not deleted')\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const onFinish = async (values) => {\r\n    values.items.forEach((item) => {\r\n      item.image.fileList.length === 0\r\n        ? (item.image = null)\r\n        : (item.image = item.image.fileList[0].response.public_id)\r\n\r\n      item.name = item.name.trim()\r\n      item.description = item.description.trim()\r\n    })\r\n\r\n    try {\r\n      await httpsService.post('/items', values.items)\r\n      notificationService.openNotification({\r\n        type: 'success',\r\n        message: 'Items has been successfully added!',\r\n        duration: 10,\r\n      })\r\n      navigate(routes.admin)\r\n    } catch (error) {\r\n      const err = error?.response?.data?.message\r\n\r\n      if (err.type) {\r\n        return notificationService.openNotification({\r\n          type: 'error',\r\n          message: err.message,\r\n          description: `${err.type} on name: ${err.value}`,\r\n          duration: 20,\r\n        })\r\n      }\r\n\r\n      notificationService.openNotification({\r\n        type: 'error',\r\n        message: 'invalid data type',\r\n        duration: 20,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-admin\">\r\n      <Form\r\n        form={form}\r\n        name=\"dynamic_form_nest_item\"\r\n        onFinish={onFinish}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.List name=\"items\" initialValue={[{}]}>\r\n          {(fields, { add, remove }) => (\r\n            <>\r\n              <div>\r\n                {fields.map((field) => (\r\n                  <Space key={field.key} align=\"baseline\">\r\n                    <Form.Item\r\n                      noStyle\r\n                      shouldUpdate={(prevValues, curValues) =>\r\n                        prevValues.categories !== curValues.categories\r\n                      }\r\n                    >\r\n                      {() => (\r\n                        <Form.Item\r\n                          {...field}\r\n                          label=\"Category\"\r\n                          name={[field.name, 'categoryId']}\r\n                          rules={[\r\n                            { required: true, message: 'Missing category' },\r\n                          ]}\r\n                        >\r\n                          <Select>\r\n                            {categories.map((item) => (\r\n                              <Option key={item.id} value={item.id}>\r\n                                {item.category}\r\n                              </Option>\r\n                            ))}\r\n                          </Select>\r\n                        </Form.Item>\r\n                      )}\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                      {...field}\r\n                      label=\"Image\"\r\n                      name={[field.name, 'image']}\r\n                    >\r\n                      <Upload\r\n                        customRequest={handleImageUpload}\r\n                        //onChange={handleOnChange}\r\n\r\n                        onRemove={handleImageRemove}\r\n                        listType=\"picture\"\r\n                        {...props}\r\n                      >\r\n                        <Button icon={<UploadOutlined />}>\r\n                          Click to Upload\r\n                        </Button>\r\n                      </Upload>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                      {...field}\r\n                      label=\"Name\"\r\n                      name={[field.name, 'name']}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Missing name',\r\n                          validator: (rule, value) => {\r\n                            if (!value.trim()) {\r\n                              return Promise.reject(new Error())\r\n                            }\r\n                            return Promise.resolve()\r\n                          },\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                      {...field}\r\n                      label=\"Price\"\r\n                      name={[field.name, 'price']}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Missing price',\r\n                          validator: (rule, value) => {\r\n                            if (!Number(value.trim())) {\r\n                              return Promise.reject(new Error())\r\n                            }\r\n                            return Promise.resolve()\r\n                          },\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                      {...field}\r\n                      label=\"Description\"\r\n                      name={[field.name, 'description']}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Missing description',\r\n                          validator: (rule, value) => {\r\n                            if (!value.trim()) {\r\n                              return Promise.reject(new Error())\r\n                            }\r\n                            return Promise.resolve()\r\n                          },\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n\r\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                  </Space>\r\n                ))}\r\n              </div>\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"dashed\"\r\n                  onClick={() => add()}\r\n                  block\r\n                  icon={<PlusOutlined />}\r\n                >\r\n                  Add item\r\n                </Button>\r\n              </Form.Item>\r\n            </>\r\n          )}\r\n        </Form.List>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"admin-button\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" block>\r\n            <Link to={routes.admin}>Admin Panel</Link>\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { routes } from '../config/routes'\r\nimport { httpsService } from '../utils/https.service'\r\nimport { notificationService } from '../utils/notification.service'\r\nimport { Form, Input, Button, Select } from 'antd'\r\nimport '../styles/adminForm.scss'\r\n\r\nconst { Option } = Select\r\n\r\nexport const UpdateItemForm = () => {\r\n  const [categories, setCategories] = useState([])\r\n  const [items, setItems] = useState([])\r\n\r\n  useEffect(() => {\r\n    httpsService\r\n      .get('/categories/', {\r\n        params: {\r\n          name: 'subcategory',\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setCategories(res)\r\n      })\r\n  }, [])\r\n\r\n  const onSelect = async (value) => {\r\n    const response = await httpsService.get('/items/', {\r\n      params: {\r\n        categoryId: value,\r\n        pageSize: 50,\r\n      },\r\n    })\r\n    const { rows } = response\r\n\r\n    setItems(rows)\r\n  }\r\n\r\n  const onFinish = async (values) => {\r\n    const { id, price, description } = values\r\n    const body = { price, description }\r\n\r\n    try {\r\n      await httpsService.put(`/items/${id}`, body)\r\n      notificationService.openNotification({\r\n        type: 'success',\r\n        description: 'Item has been successfully updated!',\r\n        duration: 10,\r\n      })\r\n    } catch (error) {\r\n      notificationService.openNotification({\r\n        type: 'error',\r\n        message: 'Invalid data type!',\r\n        duration: 20,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Form\r\n        name=\"dynamic_form_nest_item\"\r\n        onFinish={onFinish}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"menu\">\r\n          <Form.Item\r\n            label=\"Category\"\r\n            name=\"categoryId\"\r\n            rules={[{ required: true, message: 'Missing category' }]}\r\n          >\r\n            <Select onSelect={onSelect}>\r\n              {categories.map((item) => (\r\n                <Option key={item.id} value={item.id}>\r\n                  {item.category}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Name\"\r\n            name=\"id\"\r\n            rules={[{ required: true, message: 'Missing name' }]}\r\n          >\r\n            <Select>\r\n              {items.map((item) => (\r\n                <Option key={item.id} value={item.id}>\r\n                  {item.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Price\"\r\n            name=\"price\"\r\n            rules={[{ required: true, message: 'Missing price' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Description\"\r\n            name=\"description\"\r\n            rules={[{ required: true, message: 'Missing description' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </div>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"admin-button\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" block>\r\n            <Link to={routes.admin}>Admin Panel</Link>\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { routes } from '../config/routes'\r\nimport { httpsService } from '../utils/https.service'\r\nimport { notificationService } from '../utils/notification.service'\r\nimport { Form, Button, Select } from 'antd'\r\nimport '../styles/adminForm.scss'\r\n\r\nconst { Option } = Select\r\n\r\nexport const DeleteItemForm = () => {\r\n  const [categories, setCategories] = useState([])\r\n  const [items, setItems] = useState([])\r\n\r\n  useEffect(() => {\r\n    httpsService\r\n      .get('/categories/', {\r\n        params: {\r\n          name: 'subcategory',\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setCategories(res)\r\n      })\r\n  }, [])\r\n\r\n  const onSelect = async (value) => {\r\n    const response = await httpsService.get('/items/', {\r\n      params: {\r\n        categoryId: value,\r\n        pageSize: 50,\r\n      },\r\n    })\r\n    const { rows } = response\r\n\r\n    setItems(rows)\r\n  }\r\n\r\n  const onFinish = async (values) => {\r\n    try {\r\n      await httpsService.delete(`/items/${values.id}`)\r\n      notificationService.openNotification({\r\n        type: 'success',\r\n        message: 'Item has been successfully deleted!',\r\n        duration: 10,\r\n      })\r\n    } catch (error) {\r\n      notificationService.openNotification({\r\n        type: 'error',\r\n        message: 'Something went wrong. Please try again!',\r\n        duration: 20,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Form\r\n        name=\"dynamic_form_nest_item\"\r\n        onFinish={onFinish}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"menu\">\r\n          <Form.Item\r\n            label=\"Category\"\r\n            name=\"categoryId\"\r\n            rules={[{ required: true, message: 'Missing category' }]}\r\n          >\r\n            <Select onSelect={onSelect}>\r\n              {categories.map((item) => (\r\n                <Option key={item.id} value={item.id}>\r\n                  {item.category}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Name\"\r\n            name=\"id\"\r\n            rules={[{ required: true, message: 'Missing name' }]}\r\n          >\r\n            <Select>\r\n              {items.map((item) => (\r\n                <Option key={item.id} value={item.id}>\r\n                  {item.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n        </div>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"admin-button\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" block>\r\n            <Link to={routes.admin}>Admin Panel</Link>\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import { Button, Row, Col, Form, Divider, Input } from 'antd'\r\nconst { TextArea } = Input\r\n\r\nexport const Checkout = (props) => {\r\n  return (\r\n    <>\r\n      <h2>Review your order</h2>\r\n      <h3>Delivery Terms</h3>\r\n      <Form\r\n        name=\"checkout\"\r\n        onFinish={props.onFinish}\r\n        autoComplete=\"off\"\r\n        style={{\r\n          marginTop: '10px',\r\n          color: 'white',\r\n          alignItems: 'flex-start',\r\n          height: '300px',\r\n        }}\r\n      >\r\n        <Form.Item\r\n          label=\"Address\"\r\n          name=\"address\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your address!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Comments\" name=\"comments\">\r\n          <TextArea rows={4} />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            style={{\r\n              borderRadius: '0px',\r\n              width: '159px',\r\n            }}\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"register-button\"\r\n          >\r\n            Place your order\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n\r\n      <Row>\r\n        <Col span={19} offset={1}>\r\n          <p>\r\n            By placing your order, you agree to E-shop's privacy notice and\r\n            conditions of use. By placing your order, you agree to Terms and\r\n            Conditions, and authorize us to charge your default payment method\r\n            or any other payment method on file.\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n      <Divider />\r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect, useCallback, useContext, useMemo } from 'react'\r\nimport { Link, useNavigate, Navigate } from 'react-router-dom'\r\nimport { routes } from '../config/routes'\r\nimport { httpsService } from '../utils/https.service'\r\nimport { AuthContext } from '../context/authContextProvider'\r\nimport { CartContext } from '../context/cartContextProvider'\r\nimport { cloudinaryService } from '../utils/cloudinary.service'\r\nimport { AdvancedImage } from '@cloudinary/react'\r\nimport { Table, Button, Row, Col, Statistic, InputNumber, Divider } from 'antd'\r\nimport { ArrowLeftOutlined, DeleteOutlined } from '@ant-design/icons'\r\nimport { notificationService } from '../utils/notification.service'\r\nimport { Checkout } from '../components/checkout'\r\nimport { storageService } from '../utils/storage.service'\r\nimport '../styles/homePage.scss'\r\n\r\nexport const ShoppingCartForm = () => {\r\n  const [items, setItems] = useState([])\r\n  const [state, setState] = useState('start')\r\n  const navigate = useNavigate()\r\n  const { user } = useContext(AuthContext)\r\n  const { shoppingCart, setShoppingCart } = useContext(CartContext)\r\n\r\n  useEffect(() => {\r\n    let itemsId = []\r\n    shoppingCart.forEach((item) => itemsId.push(item.itemId))\r\n\r\n    if (itemsId.length === 0) return\r\n\r\n    httpsService\r\n      .post('/items/id', {\r\n        itemsId,\r\n      })\r\n      .then((res) => {\r\n        res.rows.forEach((item) => {\r\n          const index = shoppingCart.findIndex((el) => el.itemId === item.id)\r\n          item.quantity = shoppingCart[index].quantity\r\n        })\r\n\r\n        setItems(res.rows)\r\n      })\r\n      .catch((err) => console.log(err.response))\r\n  }, [shoppingCart])\r\n\r\n  const itemsQuantity = useCallback(() => {\r\n    let totalQuantity = 0\r\n    items.map((item) => (totalQuantity += item.quantity))\r\n\r\n    if (totalQuantity > 1) {\r\n      return `${totalQuantity} items`\r\n    }\r\n\r\n    return `${totalQuantity} item`\r\n  }, [items])\r\n\r\n  const totalShoppingSum = useCallback(() => {\r\n    let totalSum = 0\r\n    items.forEach((item) => {\r\n      totalSum += item.price * item.quantity\r\n    })\r\n\r\n    return totalSum.toFixed(2)\r\n  }, [items])\r\n\r\n  const handleQuantityChange = useCallback(\r\n    (value, id) => {\r\n      shoppingCart\r\n        .filter((item) => item.itemId === id)\r\n        .forEach((item) => (item.quantity = value))\r\n      items\r\n        .filter((item) => item.id === id)\r\n        .forEach((item) => (item.quantity = value))\r\n\r\n      setItems(items)\r\n      setShoppingCart([...shoppingCart])\r\n    },\r\n    [shoppingCart, setShoppingCart, items]\r\n  )\r\n\r\n  const handleItemDelete = useCallback(\r\n    (id) => {\r\n      shoppingCart.splice(\r\n        shoppingCart.findIndex((item) => item.itemId === id),\r\n        1\r\n      )\r\n      items.splice(\r\n        items.findIndex((item) => item.id === id),\r\n        1\r\n      )\r\n\r\n      if (!shoppingCart.length) {\r\n        storageService.set('shoppingCart', JSON.stringify([]))\r\n      }\r\n\r\n      setItems([...items])\r\n      setShoppingCart([...shoppingCart])\r\n    },\r\n    [shoppingCart, setShoppingCart, items]\r\n  )\r\n\r\n  const handlePlaceOrder = async (value) => {\r\n    let body = []\r\n    items.forEach((item) =>\r\n      body.push({\r\n        itemId: item.id,\r\n        price: item.price,\r\n        quantity: item.quantity,\r\n      })\r\n    )\r\n\r\n    try {\r\n      await httpsService.post('/order/', { body, value })\r\n      notificationService.openNotification({\r\n        type: 'success',\r\n        description: 'Order has been successfully submitted!',\r\n        duration: 20,\r\n      })\r\n\r\n      setShoppingCart([])\r\n      navigate(routes.homePage)\r\n    } catch (error) {\r\n      notificationService.openNotification({\r\n        type: 'error',\r\n        message: 'Please try again later!',\r\n        duration: 10,\r\n      })\r\n    }\r\n  }\r\n\r\n  const onKeyChange = (items) => items.id\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: '',\r\n        dataIndex: 'image',\r\n        render: (text, record) => (\r\n          <AdvancedImage cldImg={cloudinaryService.getImage(record.image)} />\r\n        ),\r\n      },\r\n      {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n      },\r\n      {\r\n        title: 'Quantity',\r\n        dataIndex: 'quantity',\r\n        render: (text, record) => (\r\n          <>\r\n            <InputNumber\r\n              min={1}\r\n              max={10}\r\n              defaultValue={record.quantity}\r\n              onChange={(value) => handleQuantityChange(value, record.id)}\r\n            />\r\n            <Button type=\"link\" onClick={() => handleItemDelete(record.id)}>\r\n              <DeleteOutlined />\r\n            </Button>\r\n          </>\r\n        ),\r\n      },\r\n      {\r\n        title: 'Price',\r\n        dataIndex: 'price',\r\n        render: (text, record) => (\r\n          <Statistic\r\n            valueStyle={{ fontSize: '17px' }}\r\n            title=\"Price per 1\"\r\n            value={record.price}\r\n            prefix={'$'}\r\n            precision={2}\r\n          />\r\n        ),\r\n      },\r\n    ],\r\n    [handleQuantityChange, handleItemDelete]\r\n  )\r\n\r\n  return (\r\n    <div className=\"shopping-cart-container\">\r\n      <h1>Shopping Cart</h1>\r\n\r\n      {shoppingCart.length ? (\r\n        <>\r\n          <Table\r\n            rowKey={onKeyChange}\r\n            columns={columns}\r\n            dataSource={items}\r\n            size=\"small\"\r\n            bordered={true}\r\n            pagination={{\r\n              pagesize: 10,\r\n              hideOnSinglePage: true,\r\n            }}\r\n          />\r\n          <Row>\r\n            <Col offset={17} span={5}>\r\n              <Statistic\r\n                title={`Subtotal (${itemsQuantity()})`}\r\n                value={totalShoppingSum()}\r\n                prefix={'$'}\r\n                precision={2}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Divider />\r\n          <Row>\r\n            <Col span={5}>\r\n              <Button type=\"link\">\r\n                <Link to={routes.homePage}>\r\n                  <ArrowLeftOutlined /> Continue shopping\r\n                </Link>\r\n              </Button>\r\n            </Col>\r\n            <Col span={5} offset={12}>\r\n              <Button type=\"primary\" onClick={() => setState('checkout')}>\r\n                Proceed to checkout\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Divider />\r\n          {state === 'checkout' && !user && <Navigate to={routes.login} />}\r\n          {state === 'checkout' && user && (\r\n            <Checkout onFinish={handlePlaceOrder} />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h2>Your Cart is empty</h2>\r\n          <Divider />\r\n          <Button type=\"link\">\r\n            <Link to={routes.homePage}>\r\n              <ArrowLeftOutlined /> Continue shopping\r\n            </Link>\r\n          </Button>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { useContext, useState, useEffect } from 'react'\r\nimport { useLocation, Navigate } from 'react-router-dom'\r\nimport { AuthContext } from '../context/authContextProvider'\r\nimport { storageService } from '../utils/storage.service'\r\nimport { httpsService } from '../utils/https.service'\r\nimport { routes } from '../config/routes'\r\n\r\nexport const AdminGuard = ({ children }) => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { user, setUser } = useContext(AuthContext)\r\n  const location = useLocation()\r\n  const accessToken = storageService.get('accessToken')\r\n\r\n  useEffect(() => {\r\n    if (user || !accessToken) {\r\n      return\r\n    }\r\n\r\n    setIsLoading(true)\r\n    httpsService\r\n      .get('/user')\r\n      .then((res) => {\r\n        setUser(res)\r\n      })\r\n      .finally(() => setIsLoading(false))\r\n  }, [accessToken, user, setUser])\r\n\r\n  if (!accessToken)\r\n    return <Navigate to={routes.login} state={{ from: location }} />\r\n\r\n  if (isLoading || !user) return null\r\n\r\n  if (user?.role === 'admin') return children\r\n\r\n  return <Navigate to={routes.login} state={{ from: location }} />\r\n}\r\n","import { useContext, useState, useEffect } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { AuthContext } from '../context/authContextProvider'\r\nimport { storageService } from '../utils/storage.service'\r\nimport { httpsService } from '../utils/https.service'\r\nimport { routes } from '../config/routes'\r\n\r\nexport const UserGuard = ({ children }) => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { user, setUser } = useContext(AuthContext)\r\n  const accessToken = storageService.get('accessToken')\r\n\r\n  useEffect(() => {\r\n    if (user || !accessToken) {\r\n      return\r\n    }\r\n\r\n    setIsLoading(true)\r\n    httpsService\r\n      .get('/user')\r\n      .then((res) => {\r\n        setUser(res)\r\n      })\r\n      .finally(() => setIsLoading(false))\r\n    return () => {\r\n      setIsLoading(false)\r\n    }\r\n  }, [accessToken, user, setUser])\r\n\r\n  if (!accessToken) return <Navigate to={routes.login} />\r\n\r\n  if (isLoading || !user) return null\r\n\r\n  if (user) return children\r\n\r\n  return <Navigate to={routes.login} />\r\n}\r\n","import React from 'react'\nimport { HomePage } from './pages/homePage'\nimport { LoginForm } from './pages/loginForm'\nimport { RegisterForm } from './pages/registerForm'\nimport { OrdersForm } from './pages/ordersForm'\nimport { ResetForm } from './pages/resetForm'\nimport { AdminForm } from './pages/adminForm'\nimport { AddCategoryForm } from './pages/addCategoryForm'\nimport { AddItemForm } from './pages/addItemForm'\nimport { UpdateItemForm } from './pages/updateItemForm'\nimport { DeleteItemForm } from './pages/deleteItemForm'\nimport { ShoppingCartForm } from './pages/shoppingCartForm'\nimport { Routes, Route } from 'react-router-dom'\nimport { routes } from './config/routes'\nimport { AdminGuard } from './hoc/adminGuard'\nimport { UserGuard } from './hoc/userGuard'\nimport { AuthContextProvider } from './context/authContextProvider'\nimport { CartContextProvider } from './context/cartContextProvider'\nimport 'antd/dist/antd.css'\n\nexport const App = () => {\n  return (\n    <Routes>\n      <Route\n        path={routes.homePage}\n        element={\n          <AuthContextProvider>\n            <CartContextProvider>\n              <HomePage />\n            </CartContextProvider>\n          </AuthContextProvider>\n        }\n      />\n      <Route\n        path={routes.shoppingCart}\n        element={\n          <AuthContextProvider>\n            <CartContextProvider>\n              <ShoppingCartForm />\n            </CartContextProvider>\n          </AuthContextProvider>\n        }\n      />\n\n      <Route path={routes.login} element={<LoginForm />} />\n      <Route path={routes.register} element={<RegisterForm />} />\n      <Route path={routes.reset} element={<ResetForm />} />\n      <Route\n        path={routes.orders}\n        element={\n          <AuthContextProvider>\n            <UserGuard>\n              <OrdersForm />\n            </UserGuard>\n          </AuthContextProvider>\n        }\n      />\n\n      <Route\n        path={routes.admin}\n        element={\n          <AuthContextProvider>\n            <AdminGuard>\n              <AdminForm />\n            </AdminGuard>\n          </AuthContextProvider>\n        }\n      />\n      <Route\n        path={routes.addCategory}\n        element={\n          <AuthContextProvider>\n            <AdminGuard>\n              <AddCategoryForm />\n            </AdminGuard>\n          </AuthContextProvider>\n        }\n      />\n      <Route\n        path={routes.addItem}\n        element={\n          <AuthContextProvider>\n            <AdminGuard>\n              <AddItemForm />\n            </AdminGuard>\n          </AuthContextProvider>\n        }\n      />\n      <Route\n        path={routes.updateItem}\n        element={\n          <AuthContextProvider>\n            <AdminGuard>\n              <UpdateItemForm />\n            </AdminGuard>\n          </AuthContextProvider>\n        }\n      />\n      <Route\n        path={routes.deleteItem}\n        element={\n          <AuthContextProvider>\n            <AdminGuard>\n              <DeleteItemForm />\n            </AdminGuard>\n          </AuthContextProvider>\n        }\n      />\n    </Routes>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport { App } from './App'\n\nReactDOM.render(\n  <React.StrictMode /* basename={process.env.PUBLIC_URL} */>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// BrowserRouter -> HashRouter\n"],"sourceRoot":""}