{"version":3,"sources":["config/routes.js","config/conf.js","utils/storage.service.js","utils/https.service.js","context/authContextProvider.js","context/cartContextProvider.js","context/searchContextProvider.js","components/headerHome.js","pages/homePage.js","utils/notification.service.js","pages/loginForm.js","pages/registerForm.js","components/orders.js","pages/ordersForm.js","pages/resetForm.js","pages/adminForm.js","pages/addCategoryForm.js","utils/cloudinary.service.js","pages/addItemForm.js","pages/updateItemForm.js","pages/deleteItemForm.js","components/checkout.js","pages/shoppingCartForm.js","hoc/userGuard.js","components/shoppingCartButton.js","components/productCardDesktop.js","components/productCardMobile.js","components/productTableDesktop.js","components/contentHomePage.js","components/landingHomePage.js","App.js","index.js"],"names":["routes","config","storageService","key","value","localStorage","setItem","getItem","removeItem","httpsService","url","options","this","makeRequest","method","body","data","accessToken","get","headers","Authorization","axios","conf","then","res","catch","err","refreshToken","response","status","post","set","remove","AuthContext","createContext","AuthContextProvider","children","useState","user","setUser","useEffect","console","log","Provider","logout","CartContext","CartContextProvider","shoppingCart","setShoppingCart","isInitiallyFetched","setIsInitiallyFetched","shoppingCartStorage","JSON","parse","stringify","addItemToShoppingCart","useCallback","newShoppingCart","foundIndex","findIndex","item","itemId","quantity","SearchContext","SearchContextProvider","searchValue","setSearchValue","onSearch","a","trimmedValue","trim","Search","Input","Header","Layout","SubMenu","Menu","HeaderHome","props","useContext","history","useNavigate","parentCategories","useMemo","categories","filter","parentId","className","to","ShoppingCartOutlined","style","color","fontSize","paddingLeft","direction","placeholder","allowClear","theme","mode","disabledOverflow","icon","UserOutlined","Item","CarOutlined","LogoutOutlined","onClick","count","length","size","ShoppingOutlined","role","display","flexDirection","justifyContent","alignItems","map","parentCategory","title","category","onTitleClick","e","id","Content","Footer","HomePage","setCategories","params","name","notificationService","type","message","description","duration","notification","LoginForm","navigate","fromPage","useLocation","state","from","pathname","handleLogin","replace","remember","openNotification","values","statusText","initialValues","onFinish","rules","required","prefix","min","LockOutlined","valuePropName","noStyle","htmlType","RegisterForm","handleRegister","Password","Orders","totalOrderSum","order","totalSum","items","forEach","order_item","price","toFixed","orders","margin","timestamp","createdAt","Date","toString","split","slice","join","address","precision","marginTop","hoverable","Meta","dayjs","require","Option","Select","OrdersForm","setOrders","useSearchParams","searchParams","setSearchParams","getDaysInMsc","days","extend","asMilliseconds","time","handleOrderSelect","span","HomeOutlined","orientation","defaultValue","onSelect","delete","ResetForm","handleReset","AdminForm","block","ArrowLeftOutlined","AddCategoryForm","Form","useForm","form","push","autoComplete","List","initialValue","fields","add","field","align","shouldUpdate","prevValues","curValues","label","validator","rule","Promise","resolve","reject","Error","MinusCircleOutlined","PlusOutlined","CloudinaryService","base64EncodedImage","public_id","uuidv4","formData","FormData","append","publicId","width","height","myImage","Cloudinary","cloud","cloudName","image","resize","fit","cloudinaryService","AddItemForm","maxCount","handleImageUpload","info","onSuccess","onError","file","reader","FileReader","readAsDataURL","onloadend","uploadImage","result","handleImageRemove","deleteImage","fileList","customRequest","onRemove","listType","UploadOutlined","Number","UpdateItemForm","setItems","categoryId","pageSize","rows","put","DeleteItemForm","TextArea","Checkout","borderRadius","offset","ShoppingCartForm","setState","itemsId","Array","index","el","itemsQuantity","totalQuantity","totalShoppingSum","handleQuantityChange","handleItemDelete","splice","handlePlaceOrder","columns","dataIndex","render","text","record","cldImg","getProductCardImage","max","onChange","DeleteOutlined","valueStyle","rowKey","dataSource","bordered","pagination","pagesize","hideOnSinglePage","UserGuard","admin","ShoppingCartButton","find","product","ProductCardDesktop","useParams","actions","flex","paddingTop","ProductCardMobile","overflow","dataLength","next","onMobilePaginationChange","hasMore","ProductTableDesktop","sorter","b","localeCompare","border","background","cursor","total","totalItems","onPaginationChange","current","currentPage","ContentHomePage","subId","setTotalItems","setCurrentPage","page","prevCount","getCurrentPage","query","maxWidth","matches","LandingHomepage","App","path","element","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.792012ab.chunk.js","sourcesContent":["export const routes = {\r\n  homePage: '/',\r\n  login: '/login',\r\n  register: '/register',\r\n  reset: '/reset',\r\n  admin: '/admin',\r\n  shoppingCart: '/shopping-cart',\r\n  addCategory: '/admin/add-category',\r\n  addItem: '/admin/add-item',\r\n  updateItem: '/admin/update-item',\r\n  deleteItem: '/admin/delete-item',\r\n  orders: 'orders',\r\n  github: 'https://github.com/stepanenkoales',\r\n}\r\n","export const config = {\r\n  baseUrl: 'https://ecommerce-shop-stsepanenka.herokuapp.com',\r\n  cloudinaryUrl: 'https://api.cloudinary.com/v1_1/',\r\n  cloudName: 'stepanenkoales',\r\n}\r\n","class StorageService {\r\n  set(key, value) {\r\n    localStorage.setItem(key, value)\r\n  }\r\n\r\n  get(key) {\r\n    return localStorage.getItem(key)\r\n  }\r\n\r\n  remove(key) {\r\n    localStorage.removeItem(key)\r\n  }\r\n}\r\n\r\nexport const storageService = new StorageService()\r\n","import axios from 'axios'\r\nimport { config as conf } from '../config/conf'\r\nimport { storageService } from './storage.service'\r\n\r\nclass HttpsService {\r\n  get(url, options) {\r\n    return this.makeRequest({\r\n      url,\r\n      method: 'GET',\r\n      ...options,\r\n    })\r\n  }\r\n\r\n  post(url, body, options) {\r\n    return this.makeRequest({\r\n      url,\r\n      data: body,\r\n      method: 'POST',\r\n      ...options,\r\n    })\r\n  }\r\n\r\n  put(url, body, options) {\r\n    return this.makeRequest({\r\n      url,\r\n      data: body,\r\n      method: 'PUT',\r\n      ...options,\r\n    })\r\n  }\r\n\r\n  delete(url, body, options) {\r\n    return this.makeRequest({\r\n      url,\r\n      data: body,\r\n      method: 'DELETE',\r\n      ...options,\r\n    })\r\n  }\r\n\r\n  makeRequest(config) {\r\n    const accessToken = storageService.get('accessToken')\r\n\r\n    if (accessToken) {\r\n      config.headers = {\r\n        ...config.headers,\r\n        Authorization: 'Bearer ' + accessToken,\r\n      }\r\n    }\r\n\r\n    return axios({\r\n      ...config,\r\n      url: conf.baseUrl + config.url,\r\n    })\r\n      .then((res) => {\r\n        return res.data\r\n      })\r\n      .catch((err) => {\r\n        const refreshToken = storageService.get('refreshToken')\r\n\r\n        if (err?.response?.status === 401 && refreshToken) {\r\n          return this.post('/user/refresh', { refreshToken })\r\n            .then((res) => {\r\n              storageService.set('accessToken', res.accessToken)\r\n              storageService.set('refreshToken', res.refreshToken)\r\n              return this.makeRequest(config)\r\n            })\r\n            .catch((err) => {\r\n              storageService.remove('accessToken')\r\n              storageService.remove('refreshToken')\r\n\r\n              throw err\r\n            })\r\n        }\r\n\r\n        throw err\r\n      })\r\n  }\r\n}\r\n\r\nexport const httpsService = new HttpsService()\r\n","import { createContext, useEffect, useState } from 'react'\r\nimport { httpsService } from '../utils/https.service'\r\nimport { storageService } from '../utils/storage.service'\r\n\r\nexport const AuthContext = createContext(null)\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (!storageService.get('accessToken')) {\r\n      return\r\n    }\r\n\r\n    httpsService\r\n      .get('/user')\r\n      .then((res) => {\r\n        setUser(res)\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }, [])\r\n\r\n  const logout = () => {\r\n    setUser(null)\r\n    storageService.remove('accessToken')\r\n    storageService.remove('refreshToken')\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","import { createContext, useCallback, useEffect, useState } from 'react'\r\nimport { storageService } from '../utils/storage.service'\r\n\r\nexport const CartContext = createContext(null)\r\n\r\nexport const CartContextProvider = ({ children }) => {\r\n  const [shoppingCart, setShoppingCart] = useState([])\r\n  const [isInitiallyFetched, setIsInitiallyFetched] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const shoppingCartStorage =\r\n      JSON.parse(storageService.get('shoppingCart')) || []\r\n    setShoppingCart(shoppingCartStorage)\r\n    setIsInitiallyFetched(true)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isInitiallyFetched) {\r\n      storageService.set('shoppingCart', JSON.stringify(shoppingCart))\r\n    }\r\n  }, [shoppingCart, isInitiallyFetched])\r\n\r\n  const addItemToShoppingCart = useCallback(\r\n    (newShoppingCart) => {\r\n      const foundIndex = shoppingCart.findIndex(\r\n        (item) => item.itemId === newShoppingCart.itemId\r\n      )\r\n\r\n      if (foundIndex >= 0) {\r\n        shoppingCart[foundIndex].quantity = ++shoppingCart[foundIndex].quantity\r\n        setShoppingCart([...shoppingCart])\r\n        return\r\n      }\r\n\r\n      setShoppingCart([...shoppingCart, newShoppingCart])\r\n    },\r\n    [shoppingCart]\r\n  )\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{ shoppingCart, setShoppingCart, addItemToShoppingCart }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  )\r\n}\r\n","import { createContext, useState } from 'react'\r\n\r\nexport const SearchContext = createContext(null)\r\n\r\nexport const SearchContextProvider = ({ children }) => {\r\n  const [searchValue, setSearchValue] = useState(null)\r\n\r\n  const onSearch = async (value) => {\r\n    const trimmedValue = value.trim()\r\n\r\n    if (!trimmedValue) {\r\n      setSearchValue(null)\r\n      return\r\n    }\r\n\r\n    setSearchValue(trimmedValue)\r\n  }\r\n\r\n  return (\r\n    <SearchContext.Provider value={{ searchValue, onSearch }}>\r\n      {children}\r\n    </SearchContext.Provider>\r\n  )\r\n}\r\n","import { useMemo, useContext } from 'react'\r\nimport { Layout, Menu, Input, Space, Badge } from 'antd'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport {\r\n  ShoppingOutlined,\r\n  ShoppingCartOutlined,\r\n  UserOutlined,\r\n  LogoutOutlined,\r\n  CarOutlined,\r\n} from '@ant-design/icons'\r\nimport { routes } from '../config/routes'\r\nimport { AuthContext } from '../context/authContextProvider'\r\nimport { CartContext } from '../context/cartContextProvider'\r\nimport { SearchContext } from '../context/searchContextProvider'\r\nimport '../styles/homePage.scss'\r\n\r\nconst { Search } = Input\r\nconst { Header } = Layout\r\nconst { SubMenu } = Menu\r\n\r\nexport const HeaderHome = (props) => {\r\n  const { user, logout } = useContext(AuthContext)\r\n  const { shoppingCart } = useContext(CartContext)\r\n  const { onSearch } = useContext(SearchContext)\r\n\r\n  const history = useNavigate()\r\n\r\n  const parentCategories = useMemo(\r\n    () => props.categories.filter((item) => item.parentId === null),\r\n    [props]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <div className=\"menu\">\r\n        <Link to={routes.homePage}>\r\n          <ShoppingCartOutlined\r\n            style={{\r\n              color: '#ffffff',\r\n              fontSize: '2.2em',\r\n              paddingLeft: '15px',\r\n            }}\r\n          />\r\n        </Link>\r\n\r\n        <Space className=\"desktop-visible\" direction=\"vertical\">\r\n          <Search\r\n            className=\"desktop-visible\"\r\n            placeholder=\"input search text\"\r\n            allowClear\r\n            onSearch={onSearch}\r\n          />\r\n        </Space>\r\n\r\n        <Menu theme=\"dark\" mode=\"horizontal\" disabledOverflow={true}>\r\n          {user ? (\r\n            <SubMenu\r\n              key=\"sub\"\r\n              icon={\r\n                <UserOutlined\r\n                  style={{\r\n                    fontSize: '1.5em',\r\n                  }}\r\n                />\r\n              }\r\n            >\r\n              <Menu.Item key=\"sub1\">\r\n                <Link to={routes.orders}>\r\n                  <CarOutlined />\r\n                  <span>Orders</span>\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"sub2\">\r\n                <LogoutOutlined />\r\n                <span onClick={logout}>Logout</span>\r\n              </Menu.Item>\r\n            </SubMenu>\r\n          ) : (\r\n            <Menu.Item key=\"1\">\r\n              <Link to={routes.login}>Login</Link>\r\n            </Menu.Item>\r\n          )}\r\n          <Menu.Item key=\"2\">\r\n            <Link to={routes.shoppingCart}>\r\n              <Badge count={shoppingCart.length} color=\"#a52a2a\" size=\"small\">\r\n                <ShoppingOutlined\r\n                  style={{\r\n                    color: '#ffffff',\r\n                    fontSize: '1.7em',\r\n                  }}\r\n                />\r\n              </Badge>\r\n            </Link>\r\n          </Menu.Item>\r\n          {user?.role === 'admin' && (\r\n            <Menu.Item key=\"3\">\r\n              <Link to={routes.admin}>Admin</Link>\r\n            </Menu.Item>\r\n          )}\r\n        </Menu>\r\n      </div>\r\n\r\n      <Header>\r\n        <Menu\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n          onClick={() => onSearch('')}\r\n          theme=\"dark\"\r\n          mode=\"horizontal\"\r\n        >\r\n          {parentCategories.map((parentCategory) => (\r\n            <SubMenu\r\n              key={parentCategory.id}\r\n              title={parentCategory.category}\r\n              onTitleClick={(e) => {\r\n                history('/' + e.key)\r\n                onSearch('')\r\n              }}\r\n            >\r\n              {props.categories\r\n                .filter((category) => category.parentId === parentCategory.id)\r\n                .map((category) => (\r\n                  <Menu.Item key={category.id}>\r\n                    <Link\r\n                      to={`/${parentCategory.id}/${category.id}`}\r\n                      key={category.id}\r\n                    >\r\n                      {category.category}\r\n                    </Link>\r\n                  </Menu.Item>\r\n                ))}\r\n            </SubMenu>\r\n          ))}\r\n        </Menu>\r\n      </Header>\r\n\r\n      <Header className=\"mobile-visible\">\r\n        <Space className=\"mobile-visible-space\" direction=\"vertical\">\r\n          <Search\r\n            placeholder=\"input search text\"\r\n            allowClear\r\n            onSearch={props.onSearch}\r\n          />\r\n        </Space>\r\n      </Header>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { Link, Outlet } from 'react-router-dom'\r\nimport { Layout } from 'antd'\r\nimport { routes } from '../config/routes'\r\nimport { httpsService } from '../utils/https.service'\r\nimport { HeaderHome } from '../components/headerHome'\r\nimport '../styles/homePage.scss'\r\n\r\nconst { Header, Content, Footer } = Layout\r\n\r\nexport const HomePage = () => {\r\n  const [categories, setCategories] = useState([])\r\n\r\n  useEffect(() => {\r\n    httpsService\r\n      .get('/categories/', {\r\n        params: {\r\n          name: 'all',\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setCategories(res)\r\n      })\r\n      .catch((err) => console.log(err))\r\n\r\n    return () => {\r\n      setCategories([])\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Layout>\r\n      <Header>\r\n        <HeaderHome categories={categories} />\r\n      </Header>\r\n\r\n      <Content>\r\n        <div className=\"content\">\r\n          <Outlet />\r\n        </div>\r\n      </Content>\r\n\r\n      <Footer>\r\n        Please visit my\r\n        <Link to={routes.github}> github</Link>\r\n      </Footer>\r\n    </Layout>\r\n  )\r\n}\r\n","import { notification } from 'antd'\r\n\r\nclass NotificationService {\r\n  openNotification({ type, message = '', description, duration }) {\r\n    notification[type]({\r\n      message: `${type}: ${message}`,\r\n      description,\r\n      duration,\r\n    })\r\n  }\r\n}\r\nexport const notificationService = new NotificationService()\r\n","import { Form, Input, Button, Checkbox } from 'antd'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport { routes } from '../config/routes'\r\nimport { httpsService } from '../utils/https.service'\r\nimport { storageService } from '../utils/storage.service'\r\nimport { notificationService } from '../utils/notification.service'\r\nimport '../styles/loginForm.scss'\r\n\r\nexport const LoginForm = () => {\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  const fromPage = location.state?.from?.pathname || routes.homePage\r\n\r\n  const handleLogin = async (body) => {\r\n    try {\r\n      const response = await httpsService.post('/user/login', body)\r\n      const { accessToken, refreshToken } = response\r\n      storageService.set('accessToken', accessToken)\r\n      navigate(fromPage, { replace: true })\r\n      body.remember\r\n        ? storageService.set('refreshToken', refreshToken)\r\n        : storageService.set('refreshToken', null)\r\n      notificationService.openNotification({\r\n        type: 'success',\r\n        description: 'You are logged in!',\r\n        duration: 6,\r\n      })\r\n    } catch (err) {\r\n      const values = {\r\n        type: 'error',\r\n        message: err.response.statusText,\r\n        description: err.response.data.message,\r\n        duration: 6,\r\n      }\r\n\r\n      switch (err.response.status) {\r\n        case 400:\r\n          notificationService.openNotification(values)\r\n          break\r\n        case 401:\r\n          values.description = 'Please login!'\r\n          notificationService.openNotification(values)\r\n          break\r\n        default:\r\n          values.description = err.response.data.message\r\n          notificationService.openNotification(values)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Form\r\n        name=\"login\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={handleLogin}\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          className=\"input\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid Email!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your Email!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Email\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          className=\"input\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your Password!',\r\n            },\r\n            {\r\n              type: 'string',\r\n              min: 9,\r\n              message: 'Password must be at least 9 characters',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n            <Checkbox>Remember me</Checkbox>\r\n          </Form.Item>\r\n          <Link to={routes.reset}>Forgot password</Link>\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            Login\r\n          </Button>\r\n          <div className=\"footer-text\">\r\n            <p>\r\n              Don't have an account yet?\r\n              <Link to={routes.register}> Register</Link>\r\n            </p>\r\n            <p>\r\n              return to <Link to={routes.homePage}>Homepage</Link>\r\n            </p>\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import { Form, Input, Button } from 'antd'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\r\nimport { routes } from '../config/routes'\r\nimport { httpsService } from '../utils/https.service'\r\nimport { notificationService } from '../utils/notification.service'\r\nimport '../styles/registerForm.scss'\r\n\r\nexport const RegisterForm = () => {\r\n  const navigate = useNavigate()\r\n\r\n  const handleRegister = async (body) => {\r\n    try {\r\n      await httpsService.post('/user', body)\r\n      notificationService.openNotification({\r\n        type: 'info',\r\n        description:\r\n          'In order to complete the login, please click the link in the email we just sent!',\r\n        duration: 10,\r\n      })\r\n      navigate(routes.login)\r\n    } catch (err) {\r\n      notificationService.openNotification({\r\n        type: 'error',\r\n        message: err.response.statusText,\r\n        description: err.response.data.message,\r\n        duration: 6,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Form name=\"register-form\" onFinish={handleRegister}>\r\n        <Form.Item\r\n          name=\"email\"\r\n          className=\"custom-email-input\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid Email!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your Email!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Email\" prefix={<UserOutlined />} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          className=\"input\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your password!',\r\n            },\r\n            {\r\n              type: 'string',\r\n              min: 9,\r\n              message: 'Password must be at least 9 characters',\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password placeholder=\"Password\" prefix={<LockOutlined />} />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"register-button\">\r\n            Register\r\n          </Button>\r\n          <p>\r\n            return to <Link to={routes.homePage}>Homepage</Link>\r\n          </p>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import { Button, Card, Statistic } from 'antd'\r\n\r\nexport const Orders = (props) => {\r\n  const totalOrderSum = (order) => {\r\n    let totalSum = 0\r\n    order.items.forEach((item) => {\r\n      totalSum += item.order_item.price * item.order_item.quantity\r\n    })\r\n\r\n    return totalSum.toFixed(2)\r\n  }\r\n\r\n  const getDate = (timestamp) => {\r\n    const date = new Date(timestamp).toString()\r\n    return date.split(' ').slice(1, 5).join(' ')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {props.orders.map((order) => (\r\n        <Card\r\n          style={{ margin: '20px' }}\r\n          key={order.id}\r\n          title={`Order placed ${getDate(order.createdAt)}`}\r\n        >\r\n          <br></br>\r\n          <p>{`Status: ${order.status}`}</p>\r\n          <p>{`Ship to: ${order.address}`}</p>\r\n          <Statistic\r\n            title={'Total'}\r\n            value={totalOrderSum(order)}\r\n            prefix={'$'}\r\n            precision={2}\r\n          />\r\n          {order.items.map((item) => (\r\n            <Card\r\n              key={item.id}\r\n              type=\"inner\"\r\n              style={{ marginTop: '16px' }}\r\n              hoverable\r\n            >\r\n              <Card.Meta title={item.name} description={item.description} />\r\n              <br></br>\r\n              <p>{`Quantity: ${item.order_item.quantity}`}</p>\r\n              <p>{`Sale Price: ${item.order_item.price}`}</p>\r\n            </Card>\r\n          ))}\r\n          {order.status === 'pending' && (\r\n            <Button\r\n              type=\"primary\"\r\n              style={{ marginTop: 16 }}\r\n              onClick={() => props.onClick(order.id)}\r\n            >\r\n              Cancel Order\r\n            </Button>\r\n          )}\r\n        </Card>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect, useContext } from 'react'\r\nimport { Link, useSearchParams } from 'react-router-dom'\r\nimport { LogoutOutlined, HomeOutlined } from '@ant-design/icons'\r\nimport { Layout, Menu, Row, Col, Divider, Select } from 'antd'\r\nimport { Orders } from '../components/orders'\r\nimport { AuthContext } from '../context/authContextProvider'\r\nimport { routes } from '../config/routes'\r\nimport { httpsService } from '../utils/https.service'\r\nimport '../styles/ordersForm.scss'\r\n\r\nconst dayjs = require('dayjs')\r\nconst duration = require('dayjs/plugin/duration')\r\n\r\nconst { Content } = Layout\r\nconst { Option } = Select\r\n\r\nexport const OrdersForm = () => {\r\n  const [orders, setOrders] = useState([])\r\n  const [searchParams, setSearchParams] = useSearchParams()\r\n  const { logout } = useContext(AuthContext)\r\n\r\n  const getDaysInMsc = (days) => {\r\n    dayjs.extend(duration)\r\n    return dayjs.duration(days, 'days').asMilliseconds()\r\n  }\r\n\r\n  useEffect(() => {\r\n    httpsService\r\n      .get(\r\n        '/order',\r\n        searchParams.get('orderFilter') === 'all' ||\r\n          !searchParams.get('orderFilter')\r\n          ? null\r\n          : {\r\n              params: {\r\n                time: getDaysInMsc(searchParams.get('orderFilter')),\r\n              },\r\n            }\r\n      )\r\n      .then((res) => {\r\n        setOrders(res)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n\r\n  const ordersQuantity = () => {\r\n    if (orders.length === 1) {\r\n      return '1 order'\r\n    }\r\n\r\n    return `${orders.length} orders`\r\n  }\r\n\r\n  const handleOrderCancel = (id) => {\r\n    httpsService\r\n      .delete('/order', { id })\r\n      .then((res) => {\r\n        handleOrderSelect('all')\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  const handleOrderSelect = (days) => {\r\n    searchParams.set('orderFilter', days)\r\n    setSearchParams(searchParams)\r\n\r\n    httpsService\r\n      .get(\r\n        '/order',\r\n        days === 'all'\r\n          ? null\r\n          : {\r\n              params: { time: getDaysInMsc(days) },\r\n            }\r\n      )\r\n      .then((res) => {\r\n        setOrders(res)\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Layout style={{ marginTop: '150px' }}>\r\n        <Content>\r\n          <Row>\r\n            <Col span={8}>\r\n              <div className=\"orders-left-menu\">\r\n                <Menu mode=\"vertical\">\r\n                  <Menu.Item key=\"1\">\r\n                    <Link to={routes.homePage}>\r\n                      <HomeOutlined />\r\n                      <span>Home</span>\r\n                    </Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key=\"2\">\r\n                    <LogoutOutlined />\r\n                    <span onClick={logout}>Logout</span>\r\n                  </Menu.Item>\r\n                </Menu>\r\n              </div>\r\n            </Col>\r\n            <Col span={12}>\r\n              <h1>Your Orders</h1>\r\n\r\n              <Divider orientation=\"left\">\r\n                {`${ordersQuantity()} placed in `}\r\n                <Select\r\n                  defaultValue={\r\n                    searchParams.get('orderFilter')\r\n                      ? searchParams.get('orderFilter')\r\n                      : 'all'\r\n                  }\r\n                  onSelect={handleOrderSelect}\r\n                >\r\n                  <Option value=\"all\">at all time</Option>\r\n                  <Option value=\"30\">last 30 days</Option>\r\n                  <Option value=\"90\">past 3 months</Option>\r\n                  <Option value=\"180\">past 6 months</Option>\r\n                </Select>\r\n              </Divider>\r\n\r\n              {orders.length > 0 ? (\r\n                <Orders onClick={handleOrderCancel} orders={orders} />\r\n              ) : (\r\n                <div>\r\n                  <h3>\r\n                    You have not placed any orders. Please choose another\r\n                    period!\r\n                  </h3>\r\n                </div>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Content>\r\n      </Layout>\r\n    </div>\r\n  )\r\n}\r\n","import { Form, Input, Button } from 'antd'\r\nimport { UserOutlined } from '@ant-design/icons'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { routes } from '../config/routes'\r\nimport { httpsService } from '../utils/https.service'\r\nimport { notificationService } from '../utils/notification.service'\r\nimport '../styles/resetForm.scss'\r\n\r\nexport const ResetForm = () => {\r\n  const navigate = useNavigate()\r\n\r\n  const handleReset = async (body) => {\r\n    try {\r\n      await httpsService.post('/user/reset', body)\r\n      notificationService.openNotification({\r\n        type: 'info',\r\n        description: 'New password was sent to your email.',\r\n        duration: 10,\r\n      })\r\n      navigate(routes.login)\r\n    } catch (err) {\r\n      notificationService.openNotification({\r\n        type: 'error',\r\n        message: err.response.statusText,\r\n        description: err.response.data.message,\r\n        duration: 10,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Form name=\"reset-form\" onFinish={handleReset}>\r\n        <div>\r\n          <h2>Having trouble logging in?</h2>\r\n          <p>Enter your email to get started</p>\r\n        </div>\r\n        <Form.Item\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid Email!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your Email!',\r\n            },\r\n          ]}\r\n          className=\"email-field\"\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Email\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"reset-button\">\r\n            Reset password\r\n          </Button>\r\n          <div>\r\n            return to <Link to={routes.login}>Login</Link>\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import { Button } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { routes } from '../config/routes'\r\nimport { ArrowLeftOutlined } from '@ant-design/icons'\r\nimport '../styles/adminForm.scss'\r\n\r\nexport const AdminForm = () => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Button type=\"primary\" block>\r\n        <Link to={routes.addCategory}>Add Category</Link>\r\n      </Button>\r\n      <Button type=\"primary\" block>\r\n        <Link to={routes.addItem}>Add Item</Link>\r\n      </Button>\r\n      <Button type=\"primary\" block>\r\n        <Link to={routes.updateItem}>Update Item</Link>\r\n      </Button>\r\n      <Button type=\"primary\" block>\r\n        <Link to={routes.deleteItem}>Delete Item</Link>\r\n      </Button>\r\n      <Button type=\"link\" block>\r\n        <Link to={routes.homePage}>\r\n          <ArrowLeftOutlined /> back to Home Page\r\n        </Link>\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { routes } from '../config/routes'\r\nimport { Form, Input, Button, Space, Select } from 'antd'\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons'\r\nimport { notificationService } from '../utils/notification.service'\r\nimport { httpsService } from '../utils/https.service'\r\nimport '../styles/adminForm.scss'\r\n\r\nconst { Option } = Select\r\n\r\nexport const AddCategoryForm = () => {\r\n  const [categories, setCategories] = useState([])\r\n  const [form] = Form.useForm()\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    httpsService\r\n      .get('/categories/', {\r\n        params: {\r\n          name: 'parent',\r\n        },\r\n      })\r\n      .then((res) => {\r\n        res.push({ id: null, category: 'no category' })\r\n        setCategories(res)\r\n      })\r\n  }, [])\r\n\r\n  const onFinish = async (values) => {\r\n    values.category.forEach((item) => {\r\n      item.category = item.category.trim()\r\n    })\r\n\r\n    try {\r\n      await httpsService.post('/categories', values.category)\r\n      notificationService.openNotification({\r\n        type: 'success',\r\n        description: 'Categories has been successfully added!',\r\n        duration: 10,\r\n      })\r\n      navigate(routes.admin)\r\n    } catch (error) {\r\n      const err = error?.response?.data?.message\r\n\r\n      if (err) {\r\n        return notificationService.openNotification({\r\n          type: 'error',\r\n          message: `${err.message}!`,\r\n          description: `${err.type} on name: ${err.value}`,\r\n          duration: 20,\r\n        })\r\n      }\r\n\r\n      notificationService.openNotification({\r\n        type: 'error',\r\n        message: 'invalid data type',\r\n        duration: 20,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-admin\">\r\n      <Form\r\n        form={form}\r\n        name=\"dynamic_form_nest_item\"\r\n        onFinish={onFinish}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.List name=\"category\" initialValue={[{}]}>\r\n          {(fields, { add, remove }) => (\r\n            <>\r\n              {fields.map((field) => (\r\n                <Space key={field.key} align=\"baseline\">\r\n                  <Form.Item\r\n                    noStyle\r\n                    shouldUpdate={(prevValues, curValues) =>\r\n                      prevValues.categories !== curValues.categories\r\n                    }\r\n                  >\r\n                    {() => (\r\n                      <Form.Item\r\n                        {...field}\r\n                        label=\"Parent\"\r\n                        name={[field.name, 'parentId']}\r\n                      >\r\n                        <Select>\r\n                          {categories.map((item) => (\r\n                            <Option key={item.category} value={item.id}>\r\n                              {item.category}\r\n                            </Option>\r\n                          ))}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    )}\r\n                  </Form.Item>\r\n\r\n                  <Form.Item\r\n                    {...field}\r\n                    label=\"Category\"\r\n                    name={[field.name, 'category']}\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Missing category',\r\n                        validator: (rule, value) => {\r\n                          if (!value.trim()) {\r\n                            return Promise.reject(new Error())\r\n                          }\r\n                          return Promise.resolve()\r\n                        },\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n\r\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                </Space>\r\n              ))}\r\n\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"dashed\"\r\n                  onClick={() => add()}\r\n                  block\r\n                  icon={<PlusOutlined />}\r\n                >\r\n                  Add category\r\n                </Button>\r\n              </Form.Item>\r\n            </>\r\n          )}\r\n        </Form.List>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"admin-button\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" block>\r\n            <Link to={routes.admin}>Admin Panel</Link>\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import { Cloudinary } from '@cloudinary/url-gen'\r\nimport { fit } from '@cloudinary/url-gen/actions/resize'\r\nimport { httpsService } from './https.service'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { config } from '../config/conf'\r\n\r\nclass CloudinaryService {\r\n  async uploadImage(base64EncodedImage) {\r\n    const public_id = uuidv4()\r\n    const formData = new FormData()\r\n    formData.append('file', base64EncodedImage)\r\n    formData.append('public_id', public_id)\r\n    return await httpsService.post('/cloudinary/upload', formData, {\r\n      headers: { 'Content-Type': 'multipart/form-data' },\r\n    })\r\n  }\r\n\r\n  deleteImage(public_id) {\r\n    return httpsService.post('/cloudinary/delete', { public_id })\r\n  }\r\n\r\n  getProductCardImage(publicId, width, height) {\r\n    const cld = new Cloudinary({\r\n      cloud: {\r\n        cloudName: config.cloudName,\r\n      },\r\n    })\r\n    const myImage = cld.image(publicId)\r\n    myImage.resize(\r\n      fit()\r\n        .width(width ? width : 150)\r\n        .height(height ? height : 150)\r\n    )\r\n\r\n    return myImage\r\n  }\r\n}\r\n\r\nexport const cloudinaryService = new CloudinaryService()\r\n","import { useState, useEffect } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { routes } from '../config/routes'\r\nimport { httpsService } from '../utils/https.service'\r\nimport { cloudinaryService } from '../utils/cloudinary.service'\r\nimport { notificationService } from '../utils/notification.service'\r\nimport { Form, Input, Button, Space, Select, Upload } from 'antd'\r\nimport {\r\n  MinusCircleOutlined,\r\n  PlusOutlined,\r\n  UploadOutlined,\r\n} from '@ant-design/icons'\r\nimport '../styles/adminForm.scss'\r\n\r\nconst { Option } = Select\r\n\r\nexport const AddItemForm = () => {\r\n  const [form] = Form.useForm()\r\n  const [categories, setCategories] = useState([])\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    httpsService\r\n      .get('/categories/', {\r\n        params: {\r\n          name: 'subcategory',\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setCategories(res)\r\n      })\r\n  }, [])\r\n\r\n  const props = {\r\n    maxCount: 1,\r\n  }\r\n\r\n  const handleImageUpload = async (info) => {\r\n    const { onSuccess, onError, file } = info\r\n\r\n    const reader = new FileReader()\r\n    reader.readAsDataURL(file)\r\n    reader.onloadend = async () => {\r\n      try {\r\n        const response = await cloudinaryService.uploadImage(reader.result)\r\n\r\n        onSuccess({\r\n          url: 'url',\r\n          public_id: response,\r\n        })\r\n      } catch (err) {\r\n        onError(err)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleImageRemove = async (info) => {\r\n    try {\r\n      const response = await cloudinaryService.deleteImage(\r\n        info?.response?.public_id\r\n      )\r\n\r\n      if (response.result !== 'ok') {\r\n        throw new Error('not deleted')\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const onFinish = async (values) => {\r\n    values.items.forEach((item) => {\r\n      item.image.fileList.length === 0\r\n        ? (item.image = null)\r\n        : (item.image = item.image.fileList[0].response.public_id)\r\n\r\n      item.name = item.name.trim()\r\n      item.description = item.description.trim()\r\n    })\r\n\r\n    try {\r\n      await httpsService.post('/items', values.items)\r\n      notificationService.openNotification({\r\n        type: 'success',\r\n        message: 'Items has been successfully added!',\r\n        duration: 10,\r\n      })\r\n      navigate(routes.admin)\r\n    } catch (error) {\r\n      const err = error?.response?.data?.message\r\n\r\n      if (err.type) {\r\n        return notificationService.openNotification({\r\n          type: 'error',\r\n          message: err.message,\r\n          description: `${err.type} on name: ${err.value}`,\r\n          duration: 20,\r\n        })\r\n      }\r\n\r\n      notificationService.openNotification({\r\n        type: 'error',\r\n        message: 'invalid data type',\r\n        duration: 20,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-admin\">\r\n      <Form\r\n        form={form}\r\n        name=\"dynamic_form_nest_item\"\r\n        onFinish={onFinish}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.List name=\"items\" initialValue={[{}]}>\r\n          {(fields, { add, remove }) => (\r\n            <>\r\n              <div>\r\n                {fields.map((field) => (\r\n                  <Space key={field.key} align=\"baseline\">\r\n                    <Form.Item\r\n                      noStyle\r\n                      shouldUpdate={(prevValues, curValues) =>\r\n                        prevValues.categories !== curValues.categories\r\n                      }\r\n                    >\r\n                      {() => (\r\n                        <Form.Item\r\n                          {...field}\r\n                          label=\"Category\"\r\n                          name={[field.name, 'categoryId']}\r\n                          rules={[\r\n                            { required: true, message: 'Missing category' },\r\n                          ]}\r\n                        >\r\n                          <Select>\r\n                            {categories.map((item) => (\r\n                              <Option key={item.id} value={item.id}>\r\n                                {item.category}\r\n                              </Option>\r\n                            ))}\r\n                          </Select>\r\n                        </Form.Item>\r\n                      )}\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                      {...field}\r\n                      label=\"Image\"\r\n                      name={[field.name, 'image']}\r\n                    >\r\n                      <Upload\r\n                        customRequest={handleImageUpload}\r\n                        onRemove={handleImageRemove}\r\n                        listType=\"picture\"\r\n                        {...props}\r\n                      >\r\n                        <Button icon={<UploadOutlined />}>\r\n                          Click to Upload\r\n                        </Button>\r\n                      </Upload>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                      {...field}\r\n                      label=\"Name\"\r\n                      name={[field.name, 'name']}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Missing name',\r\n                          validator: (rule, value) => {\r\n                            if (!value.trim()) {\r\n                              return Promise.reject(new Error())\r\n                            }\r\n                            return Promise.resolve()\r\n                          },\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                      {...field}\r\n                      label=\"Price\"\r\n                      name={[field.name, 'price']}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Missing price',\r\n                          validator: (rule, value) => {\r\n                            if (!Number(value.trim())) {\r\n                              return Promise.reject(new Error())\r\n                            }\r\n                            return Promise.resolve()\r\n                          },\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                      {...field}\r\n                      label=\"Description\"\r\n                      name={[field.name, 'description']}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Missing description',\r\n                          validator: (rule, value) => {\r\n                            if (!value.trim()) {\r\n                              return Promise.reject(new Error())\r\n                            }\r\n                            return Promise.resolve()\r\n                          },\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n\r\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                  </Space>\r\n                ))}\r\n              </div>\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"dashed\"\r\n                  onClick={() => add()}\r\n                  block\r\n                  icon={<PlusOutlined />}\r\n                >\r\n                  Add item\r\n                </Button>\r\n              </Form.Item>\r\n            </>\r\n          )}\r\n        </Form.List>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"admin-button\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" block>\r\n            <Link to={routes.admin}>Admin Panel</Link>\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { routes } from '../config/routes'\r\nimport { httpsService } from '../utils/https.service'\r\nimport { notificationService } from '../utils/notification.service'\r\nimport { Form, Input, Button, Select } from 'antd'\r\nimport '../styles/adminForm.scss'\r\n\r\nconst { Option } = Select\r\n\r\nexport const UpdateItemForm = () => {\r\n  const [categories, setCategories] = useState([])\r\n  const [items, setItems] = useState([])\r\n\r\n  useEffect(() => {\r\n    httpsService\r\n      .get('/categories/', {\r\n        params: {\r\n          name: 'subcategory',\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setCategories(res)\r\n      })\r\n  }, [])\r\n\r\n  const onSelect = async (value) => {\r\n    const response = await httpsService.get('/items/', {\r\n      params: {\r\n        categoryId: value,\r\n        pageSize: 50,\r\n      },\r\n    })\r\n    const { rows } = response\r\n\r\n    setItems(rows)\r\n  }\r\n\r\n  const onFinish = async (values) => {\r\n    const { id, price, description } = values\r\n    const body = { price, description }\r\n\r\n    try {\r\n      await httpsService.put(`/items/${id}`, body)\r\n      notificationService.openNotification({\r\n        type: 'success',\r\n        description: 'Item has been successfully updated!',\r\n        duration: 10,\r\n      })\r\n    } catch (error) {\r\n      notificationService.openNotification({\r\n        type: 'error',\r\n        message: 'Invalid data type!',\r\n        duration: 20,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Form\r\n        name=\"dynamic_form_nest_item\"\r\n        onFinish={onFinish}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"menu\">\r\n          <Form.Item\r\n            label=\"Category\"\r\n            name=\"categoryId\"\r\n            rules={[{ required: true, message: 'Missing category' }]}\r\n          >\r\n            <Select onSelect={onSelect}>\r\n              {categories.map((item) => (\r\n                <Option key={item.id} value={item.id}>\r\n                  {item.category}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Name\"\r\n            name=\"id\"\r\n            rules={[{ required: true, message: 'Missing name' }]}\r\n          >\r\n            <Select>\r\n              {items.map((item) => (\r\n                <Option key={item.id} value={item.id}>\r\n                  {item.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Price\"\r\n            name=\"price\"\r\n            rules={[{ required: true, message: 'Missing price' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Description\"\r\n            name=\"description\"\r\n            rules={[{ required: true, message: 'Missing description' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </div>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"admin-button\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" block>\r\n            <Link to={routes.admin}>Admin Panel</Link>\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { routes } from '../config/routes'\r\nimport { httpsService } from '../utils/https.service'\r\nimport { notificationService } from '../utils/notification.service'\r\nimport { Form, Button, Select } from 'antd'\r\nimport '../styles/adminForm.scss'\r\n\r\nconst { Option } = Select\r\n\r\nexport const DeleteItemForm = () => {\r\n  const [categories, setCategories] = useState([])\r\n  const [items, setItems] = useState([])\r\n\r\n  useEffect(() => {\r\n    httpsService\r\n      .get('/categories/', {\r\n        params: {\r\n          name: 'subcategory',\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setCategories(res)\r\n      })\r\n  }, [])\r\n\r\n  const onSelect = async (value) => {\r\n    const response = await httpsService.get('/items/', {\r\n      params: {\r\n        categoryId: value,\r\n        pageSize: 50,\r\n      },\r\n    })\r\n    const { rows } = response\r\n\r\n    setItems(rows)\r\n  }\r\n\r\n  const onFinish = async (values) => {\r\n    try {\r\n      await httpsService.delete(`/items/${values.id}`)\r\n      notificationService.openNotification({\r\n        type: 'success',\r\n        message: 'Item has been successfully deleted!',\r\n        duration: 10,\r\n      })\r\n    } catch (error) {\r\n      notificationService.openNotification({\r\n        type: 'error',\r\n        message: 'Something went wrong. Please try again!',\r\n        duration: 20,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Form\r\n        name=\"dynamic_form_nest_item\"\r\n        onFinish={onFinish}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"menu\">\r\n          <Form.Item\r\n            label=\"Category\"\r\n            name=\"categoryId\"\r\n            rules={[{ required: true, message: 'Missing category' }]}\r\n          >\r\n            <Select onSelect={onSelect}>\r\n              {categories.map((item) => (\r\n                <Option key={item.id} value={item.id}>\r\n                  {item.category}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Name\"\r\n            name=\"id\"\r\n            rules={[{ required: true, message: 'Missing name' }]}\r\n          >\r\n            <Select>\r\n              {items.map((item) => (\r\n                <Option key={item.id} value={item.id}>\r\n                  {item.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n        </div>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"admin-button\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" block>\r\n            <Link to={routes.admin}>Admin Panel</Link>\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import { Button, Row, Col, Form, Divider, Input } from 'antd'\r\nconst { TextArea } = Input\r\n\r\nexport const Checkout = (props) => {\r\n  return (\r\n    <>\r\n      <h2>Review your order</h2>\r\n      <h3>Delivery Terms</h3>\r\n      <Form\r\n        name=\"checkout\"\r\n        onFinish={props.onFinish}\r\n        autoComplete=\"off\"\r\n        style={{\r\n          marginTop: '10px',\r\n          color: 'white',\r\n          alignItems: 'flex-start',\r\n          height: '300px',\r\n        }}\r\n      >\r\n        <Form.Item\r\n          label=\"Address\"\r\n          name=\"address\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your address!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Comments\" name=\"comments\">\r\n          <TextArea rows={4} />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            style={{\r\n              borderRadius: '0px',\r\n              width: '159px',\r\n            }}\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"register-button\"\r\n          >\r\n            Place your order\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n\r\n      <Row>\r\n        <Col span={19} offset={1}>\r\n          <p>\r\n            By placing your order, you agree to E-shop's privacy notice and\r\n            conditions of use. By placing your order, you agree to Terms and\r\n            Conditions, and authorize us to charge your default payment method\r\n            or any other payment method on file.\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n      <Divider />\r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect, useCallback, useContext, useMemo } from 'react'\r\nimport { useNavigate, Navigate } from 'react-router-dom'\r\nimport { routes } from '../config/routes'\r\nimport { httpsService } from '../utils/https.service'\r\nimport { AuthContext } from '../context/authContextProvider'\r\nimport { CartContext } from '../context/cartContextProvider'\r\nimport { cloudinaryService } from '../utils/cloudinary.service'\r\nimport { AdvancedImage } from '@cloudinary/react'\r\nimport { Table, Button, Row, Col, Statistic, InputNumber, Divider } from 'antd'\r\nimport { ArrowLeftOutlined, DeleteOutlined } from '@ant-design/icons'\r\nimport { notificationService } from '../utils/notification.service'\r\nimport { Checkout } from '../components/checkout'\r\nimport { storageService } from '../utils/storage.service'\r\nimport '../styles/homePage.scss'\r\n\r\nexport const ShoppingCartForm = () => {\r\n  const [items, setItems] = useState([])\r\n  const [state, setState] = useState('start')\r\n  const navigate = useNavigate()\r\n  const { user } = useContext(AuthContext)\r\n  const { shoppingCart, setShoppingCart } = useContext(CartContext)\r\n\r\n  useEffect(() => {\r\n    const itemsId = Array.from(shoppingCart, (item) => item.itemId)\r\n\r\n    if (itemsId.length === 0) return\r\n\r\n    httpsService\r\n      .post('/items/id', {\r\n        itemsId,\r\n      })\r\n      .then((res) => {\r\n        res.rows.forEach((item) => {\r\n          const index = shoppingCart.findIndex((el) => el.itemId === item.id)\r\n          item.quantity = shoppingCart[index].quantity\r\n        })\r\n\r\n        setItems(res.rows)\r\n      })\r\n      .catch((err) => console.log(err.response))\r\n  }, [shoppingCart])\r\n\r\n  const itemsQuantity = useCallback(() => {\r\n    let totalQuantity = 0\r\n    items.map((item) => (totalQuantity += item.quantity))\r\n\r\n    if (totalQuantity > 1) {\r\n      return `${totalQuantity} items`\r\n    }\r\n\r\n    return `${totalQuantity} item`\r\n  }, [items])\r\n\r\n  const totalShoppingSum = useCallback(() => {\r\n    let totalSum = 0\r\n    items.forEach((item) => {\r\n      totalSum += item.price * item.quantity\r\n    })\r\n\r\n    return totalSum.toFixed(2)\r\n  }, [items])\r\n\r\n  const handleQuantityChange = useCallback(\r\n    (value, id) => {\r\n      shoppingCart\r\n        .filter((item) => item.itemId === id)\r\n        .forEach((item) => (item.quantity = value))\r\n      items\r\n        .filter((item) => item.id === id)\r\n        .forEach((item) => (item.quantity = value))\r\n\r\n      setItems(items)\r\n      setShoppingCart([...shoppingCart])\r\n    },\r\n    [shoppingCart, setShoppingCart, items]\r\n  )\r\n\r\n  const handleItemDelete = useCallback(\r\n    (id) => {\r\n      shoppingCart.splice(\r\n        shoppingCart.findIndex((item) => item.itemId === id),\r\n        1\r\n      )\r\n      items.splice(\r\n        items.findIndex((item) => item.id === id),\r\n        1\r\n      )\r\n\r\n      if (!shoppingCart.length) {\r\n        storageService.set('shoppingCart', JSON.stringify([]))\r\n      }\r\n\r\n      setItems([...items])\r\n      setShoppingCart([...shoppingCart])\r\n    },\r\n    [shoppingCart, setShoppingCart, items]\r\n  )\r\n\r\n  const handlePlaceOrder = async (value) => {\r\n    let body = []\r\n    items.forEach((item) =>\r\n      body.push({\r\n        itemId: item.id,\r\n        price: item.price,\r\n        quantity: item.quantity,\r\n      })\r\n    )\r\n\r\n    try {\r\n      await httpsService.post('/order/', { body, value })\r\n      notificationService.openNotification({\r\n        type: 'success',\r\n        description: 'Order has been successfully submitted!',\r\n        duration: 20,\r\n      })\r\n\r\n      setShoppingCart([])\r\n      navigate(routes.homePage)\r\n    } catch (error) {\r\n      notificationService.openNotification({\r\n        type: 'error',\r\n        message: 'Please try again later!',\r\n        duration: 10,\r\n      })\r\n    }\r\n  }\r\n\r\n  const onKeyChange = (items) => items.id\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: '',\r\n        dataIndex: 'image',\r\n        render: (text, record) => (\r\n          <AdvancedImage\r\n            cldImg={cloudinaryService.getProductCardImage(record.image)}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n      },\r\n      {\r\n        title: 'Quantity',\r\n        dataIndex: 'quantity',\r\n        render: (text, record) => (\r\n          <>\r\n            <InputNumber\r\n              min={1}\r\n              max={10}\r\n              defaultValue={record.quantity}\r\n              onChange={(value) => handleQuantityChange(value, record.id)}\r\n            />\r\n            <Button type=\"link\" onClick={() => handleItemDelete(record.id)}>\r\n              <DeleteOutlined />\r\n            </Button>\r\n          </>\r\n        ),\r\n      },\r\n      {\r\n        title: 'Price',\r\n        dataIndex: 'price',\r\n        render: (text, record) => (\r\n          <Statistic\r\n            valueStyle={{ fontSize: '17px' }}\r\n            title=\"Price per 1\"\r\n            value={record.price}\r\n            prefix={'$'}\r\n            precision={2}\r\n          />\r\n        ),\r\n      },\r\n    ],\r\n    [handleQuantityChange, handleItemDelete]\r\n  )\r\n\r\n  return (\r\n    <div className=\"shopping-cart-container\">\r\n      <h1>Shopping Cart</h1>\r\n\r\n      {shoppingCart.length ? (\r\n        <>\r\n          <Table\r\n            rowKey={onKeyChange}\r\n            columns={columns}\r\n            dataSource={items}\r\n            size=\"small\"\r\n            bordered={true}\r\n            pagination={{\r\n              pagesize: 10,\r\n              hideOnSinglePage: true,\r\n            }}\r\n          />\r\n          <Row>\r\n            <Col offset={17} span={5}>\r\n              <Statistic\r\n                title={`Subtotal (${itemsQuantity()})`}\r\n                value={totalShoppingSum()}\r\n                prefix={'$'}\r\n                precision={2}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Divider />\r\n          <Row>\r\n            <Col span={5}>\r\n              <Button\r\n                onClick={() => {\r\n                  navigate(-1)\r\n                }}\r\n                type=\"link\"\r\n              >\r\n                <ArrowLeftOutlined /> Continue Shopping\r\n              </Button>\r\n            </Col>\r\n            <Col span={5} offset={12}>\r\n              <Button type=\"primary\" onClick={() => setState('checkout')}>\r\n                Proceed to checkout\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Divider />\r\n          {state === 'checkout' && !user && <Navigate to={routes.login} />}\r\n          {state === 'checkout' && user && (\r\n            <Checkout onFinish={handlePlaceOrder} />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h2>Your Cart is empty</h2>\r\n          <Divider />\r\n          <Button\r\n            type=\"link\"\r\n            onClick={() => {\r\n              navigate(-1)\r\n            }}\r\n          >\r\n            <ArrowLeftOutlined /> Continue Shopping\r\n          </Button>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { useContext } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { AuthContext } from '../context/authContextProvider'\r\nimport { storageService } from '../utils/storage.service'\r\nimport { routes } from '../config/routes'\r\n\r\nexport const UserGuard = ({ children, admin = false }) => {\r\n  const { user } = useContext(AuthContext)\r\n  const accessToken = storageService.get('accessToken')\r\n\r\n  if (!accessToken) return <Navigate to={routes.login} />\r\n\r\n  if (!user) return null\r\n\r\n  if (admin && user.role === 'admin') return children\r\n\r\n  if (!admin) return children\r\n\r\n  return <Navigate to={routes.login} />\r\n}\r\n","import { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { CartContext } from '../context/cartContextProvider'\r\nimport { routes } from '../config/routes'\r\nimport { Button } from 'antd'\r\nimport { ShoppingOutlined } from '@ant-design/icons'\r\n\r\nexport const ShoppingCartButton = (props) => {\r\n  const { shoppingCart, addItemToShoppingCart } = useContext(CartContext)\r\n\r\n  if (shoppingCart.find((product) => product.itemId === props.id)) {\r\n    return (\r\n      <Button type=\"ghost\">\r\n        <Link to={routes.shoppingCart}>Added to Cart</Link>\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      onClick={() =>\r\n        addItemToShoppingCart({\r\n          itemId: props.id,\r\n          quantity: props.quantity ? props.quantity : 1,\r\n        })\r\n      }\r\n      type=\"link\"\r\n    >\r\n      <ShoppingOutlined\r\n        style={{\r\n          color: '#0f0f0f',\r\n          fontSize: '1.4em',\r\n        }}\r\n      />\r\n    </Button>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { Link, useParams, useNavigate } from 'react-router-dom'\r\nimport { Card, Statistic, Row, Col, Divider, Button } from 'antd'\r\nimport { AdvancedImage } from '@cloudinary/react'\r\nimport { cloudinaryService } from '../utils/cloudinary.service'\r\nimport { HomeOutlined } from '@ant-design/icons'\r\nimport { ShoppingCartButton } from './shoppingCartButton'\r\nimport { routes } from '../config/routes'\r\nimport { httpsService } from '../utils/https.service'\r\n\r\nexport const ProductCardDesktop = () => {\r\n  const { id } = useParams()\r\n  const navigate = useNavigate()\r\n  const [item, setItem] = useState([])\r\n\r\n  const navigateBack = () => {\r\n    navigate(-1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    httpsService\r\n      .post('/items/id', {\r\n        itemsId: id,\r\n      })\r\n      .then((res) => {\r\n        console.log(res)\r\n        setItem(res.rows[0])\r\n      })\r\n      .catch((err) => console.log(err.response))\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n      }}\r\n    >\r\n      <Card\r\n        style={{\r\n          marginTop: '130px',\r\n          width: '60%',\r\n          fontSize: '16px',\r\n        }}\r\n        title={item.name}\r\n        bordered={false}\r\n        hoverable\r\n        actions={[\r\n          <Button type=\"ghost\" onClick={navigateBack}>\r\n            back to Products\r\n          </Button>,\r\n          <Link to={routes.homePage}>\r\n            <HomeOutlined\r\n              style={{\r\n                marginTop: '5px',\r\n                color: '#0f0f0f',\r\n                fontSize: '1.4em',\r\n              }}\r\n            />\r\n          </Link>,\r\n          <ShoppingCartButton id={item.id} />,\r\n        ]}\r\n      >\r\n        <Row>\r\n          <Col flex={3}>\r\n            <AdvancedImage\r\n              cldImg={cloudinaryService.getProductCardImage(item.image, 200)}\r\n            />\r\n          </Col>\r\n          <Col offset={2} flex={2}>\r\n            <Statistic\r\n              style={{ paddingTop: '10px', fontSize: '16px' }}\r\n              value={item.price}\r\n              prefix={'$'}\r\n              precision={2}\r\n            />\r\n            <Divider />\r\n            <p>{item.description}</p>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n","import InfiniteScroll from 'react-infinite-scroll-component'\r\nimport { Card, Statistic } from 'antd'\r\nimport { AdvancedImage } from '@cloudinary/react'\r\nimport { cloudinaryService } from '../utils/cloudinary.service'\r\nimport { ShoppingCartButton } from './shoppingCartButton'\r\n\r\nexport const ProductCardMobile = (props) => {\r\n  return (\r\n    <>\r\n      <div style={{ overflow: 'auto' }}>\r\n        <InfiniteScroll\r\n          dataLength={props.items.length}\r\n          next={props.onMobilePaginationChange}\r\n          hasMore={true}\r\n        >\r\n          {props.items.map((item) => (\r\n            <Card\r\n              key={item.id}\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n              hoverable\r\n              actions={[<ShoppingCartButton id={item.id} />]}\r\n            >\r\n              <AdvancedImage\r\n                cldImg={cloudinaryService.getProductCardImage(item.image)}\r\n              />\r\n              <Card.Meta\r\n                style={{ paddingTop: '10px' }}\r\n                title={item.name}\r\n                description={item.description}\r\n              />\r\n              <Statistic\r\n                style={{ paddingTop: '10px' }}\r\n                value={item.price}\r\n                prefix={'$'}\r\n                precision={2}\r\n              />\r\n            </Card>\r\n          ))}\r\n        </InfiniteScroll>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useMemo } from 'react'\r\nimport { cloudinaryService } from '../utils/cloudinary.service'\r\nimport { AdvancedImage } from '@cloudinary/react'\r\nimport { Table, InputNumber } from 'antd'\r\nimport { ShoppingCartButton } from './shoppingCartButton'\r\nimport { Link } from 'react-router-dom'\r\nimport '../styles/homePage.scss'\r\n\r\nexport const ProductTableDesktop = (props) => {\r\n  const onTableKeyChange = (items) => items.id\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: '',\r\n        dataIndex: 'image',\r\n        render: (text, record) => (\r\n          <AdvancedImage\r\n            cldImg={cloudinaryService.getProductCardImage(record.image, 200)}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        sorter: (a, b) => a.name.localeCompare(b.name),\r\n        render: (text, record) => (\r\n          <Link\r\n            style={{\r\n              border: 'none',\r\n              background: 'white',\r\n              cursor: 'pointer',\r\n              color: '#1890ff',\r\n            }}\r\n            to={`/product/${record.id}`}\r\n          >\r\n            {record.name}\r\n          </Link>\r\n        ),\r\n      },\r\n      {\r\n        title: 'Description',\r\n        dataIndex: 'description',\r\n      },\r\n      {\r\n        title: 'Price',\r\n        dataIndex: 'price',\r\n        sorter: (a, b) => a.price - b.price,\r\n      },\r\n      {\r\n        title: 'Quantity',\r\n        dataIndex: 'quantity',\r\n        render: (text, record) => (\r\n          <>\r\n            <InputNumber\r\n              min={1}\r\n              max={10}\r\n              defaultValue={1}\r\n              onChange={(quantity) =>\r\n                props.handleQuantityChange(quantity, record.id)\r\n              }\r\n            />\r\n          </>\r\n        ),\r\n      },\r\n      {\r\n        title: '',\r\n        dataIndex: '',\r\n        render: (text, record) => (\r\n          <ShoppingCartButton id={record.id} quantity={record.quantity} />\r\n        ),\r\n      },\r\n    ],\r\n    [props]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        className=\"product-table-desktop\"\r\n        rowKey={onTableKeyChange}\r\n        columns={columns}\r\n        dataSource={props.items}\r\n        pagination={{\r\n          pageSize: 5,\r\n          total: props.totalItems,\r\n          hideOnSinglePage: true,\r\n          onChange: props.onPaginationChange,\r\n          current: props.currentPage,\r\n        }}\r\n        size=\"small\"\r\n        bordered={true}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState, useCallback, useContext } from 'react'\r\nimport { useParams, useSearchParams } from 'react-router-dom'\r\nimport { ProductCardMobile } from './productCardMobile'\r\nimport { ProductTableDesktop } from './productTableDesktop'\r\nimport { httpsService } from '../utils/https.service'\r\nimport { SearchContext } from '../context/searchContextProvider'\r\nimport Media from 'react-media'\r\n\r\nexport const ContentHomePage = () => {\r\n  const { id, subId } = useParams()\r\n  const [items, setItems] = useState([])\r\n  const [totalItems, setTotalItems] = useState(0)\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const { searchValue } = useContext(SearchContext)\r\n  const [searchParams, setSearchParams] = useSearchParams()\r\n\r\n  useEffect(() => {\r\n    if (searchValue) {\r\n      return httpsService\r\n        .post(\r\n          '/items/id',\r\n          id\r\n            ? {\r\n                parentId: id,\r\n                name: searchValue,\r\n                currentPage: searchParams.get('page'),\r\n              }\r\n            : {\r\n                categoryId: subId,\r\n                name: searchValue,\r\n                currentPage: searchParams.get('page'),\r\n              }\r\n        )\r\n        .then((res) => {\r\n          setItems(res.rows)\r\n          setTotalItems(res.count)\r\n        })\r\n        .catch((err) => console.log(err))\r\n    }\r\n\r\n    if (subId) {\r\n      return httpsService\r\n        .get('/items/', {\r\n          params: { categoryId: subId, currentPage: searchParams.get('page') },\r\n        })\r\n        .then((res) => {\r\n          setItems(res.rows)\r\n          setTotalItems(res.count)\r\n        })\r\n        .catch((err) => console.log(err))\r\n    }\r\n\r\n    return httpsService\r\n      .get('/items/', {\r\n        params: { parentId: id, currentPage: searchParams.get('page') },\r\n      })\r\n      .then((res) => {\r\n        setItems(res.rows)\r\n        setTotalItems(res.count)\r\n      })\r\n      .catch((err) => console.log(err.response))\r\n  }, [subId, id, searchValue, searchParams])\r\n\r\n  const onPaginationChange = async (page, pageSize) => {\r\n    setSearchParams({ page })\r\n\r\n    const response = await httpsService.post(\r\n      '/items/id',\r\n      subId\r\n        ? {\r\n            categoryId: subId,\r\n            currentPage: page,\r\n            pageSize: pageSize,\r\n            name: searchValue,\r\n          }\r\n        : {\r\n            parentId: id,\r\n            currentPage: page,\r\n            pageSize: pageSize,\r\n            name: searchValue,\r\n          }\r\n    )\r\n    const { rows } = response\r\n    setCurrentPage(page)\r\n    setItems(rows)\r\n  }\r\n\r\n  const onMobilePaginationChange = async () => {\r\n    const response = await httpsService.post(\r\n      '/items/id',\r\n      subId\r\n        ? {\r\n            categoryId: subId,\r\n            currentPage: currentPage + 1,\r\n            pageSize: 5,\r\n            name: searchValue,\r\n          }\r\n        : {\r\n            parentId: id,\r\n            currentPage: currentPage + 1,\r\n            pageSize: 5,\r\n            name: searchValue,\r\n          }\r\n    )\r\n    const { rows, count } = response\r\n\r\n    setTotalItems(count)\r\n    setCurrentPage((prevCount) => prevCount + 1)\r\n    setItems([...items, ...rows])\r\n  }\r\n\r\n  const handleQuantityChange = useCallback(\r\n    (quantity, itemId) => {\r\n      const foundIndex = items.findIndex((item) => item.id === itemId)\r\n\r\n      if (foundIndex >= 0) {\r\n        items[foundIndex].quantity = quantity\r\n        setItems([...items])\r\n      }\r\n    },\r\n    [items]\r\n  )\r\n\r\n  const getCurrentPage = () => {\r\n    const currentPage = searchParams.get('page')\r\n    if (currentPage) {\r\n      return Number(currentPage)\r\n    }\r\n    return 1\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Media query={{ maxWidth: 720 }}>\r\n        {(matches) =>\r\n          matches ? (\r\n            <ProductCardMobile\r\n              items={items}\r\n              totalItems={totalItems}\r\n              onMobilePaginationChange={onMobilePaginationChange}\r\n            />\r\n          ) : (\r\n            <ProductTableDesktop\r\n              items={items}\r\n              totalItems={totalItems}\r\n              currentPage={getCurrentPage()}\r\n              onPaginationChange={onPaginationChange}\r\n              handleQuantityChange={handleQuantityChange}\r\n            />\r\n          )\r\n        }\r\n      </Media>\r\n    </>\r\n  )\r\n}\r\n","export const LandingHomepage = () => {\r\n  return (\r\n    <div className=\"landing-page\">\r\n      <h1>Welcome to online store!</h1>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { HomePage } from './pages/homePage'\r\nimport { LoginForm } from './pages/loginForm'\r\nimport { RegisterForm } from './pages/registerForm'\r\nimport { OrdersForm } from './pages/ordersForm'\r\nimport { ResetForm } from './pages/resetForm'\r\nimport { AdminForm } from './pages/adminForm'\r\nimport { AddCategoryForm } from './pages/addCategoryForm'\r\nimport { AddItemForm } from './pages/addItemForm'\r\nimport { UpdateItemForm } from './pages/updateItemForm'\r\nimport { DeleteItemForm } from './pages/deleteItemForm'\r\nimport { ShoppingCartForm } from './pages/shoppingCartForm'\r\nimport { Routes, Route } from 'react-router-dom'\r\nimport { routes } from './config/routes'\r\nimport { UserGuard } from './hoc/userGuard'\r\nimport { AuthContextProvider } from './context/authContextProvider'\r\nimport { CartContextProvider } from './context/cartContextProvider'\r\nimport { SearchContextProvider } from './context/searchContextProvider'\r\nimport { ProductCardDesktop } from './components/productCardDesktop'\r\nimport { ContentHomePage } from './components/contentHomePage'\r\nimport { LandingHomepage } from './components/landingHomePage'\r\nimport 'antd/dist/antd.css'\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Routes>\r\n      <Route\r\n        path={routes.homePage}\r\n        element={\r\n          <AuthContextProvider>\r\n            <CartContextProvider>\r\n              <SearchContextProvider>\r\n                <HomePage />\r\n              </SearchContextProvider>\r\n            </CartContextProvider>\r\n          </AuthContextProvider>\r\n        }\r\n      >\r\n        <Route index element={<LandingHomepage />} />\r\n        <Route path=\"/:id\" element={<ContentHomePage />} />\r\n        <Route path=\"/:id/:subId\" element={<ContentHomePage />} />\r\n        <Route path=\"product/:id\" element={<ProductCardDesktop />} />\r\n      </Route>\r\n\r\n      <Route\r\n        path={routes.shoppingCart}\r\n        element={\r\n          <AuthContextProvider>\r\n            <CartContextProvider>\r\n              <ShoppingCartForm />\r\n            </CartContextProvider>\r\n          </AuthContextProvider>\r\n        }\r\n      />\r\n\r\n      <Route path={routes.login} element={<LoginForm />} />\r\n      <Route path={routes.register} element={<RegisterForm />} />\r\n      <Route path={routes.reset} element={<ResetForm />} />\r\n      <Route\r\n        path={routes.orders}\r\n        element={\r\n          <AuthContextProvider>\r\n            <UserGuard>\r\n              <OrdersForm />\r\n            </UserGuard>\r\n          </AuthContextProvider>\r\n        }\r\n      />\r\n\r\n      <Route\r\n        path={routes.admin}\r\n        element={\r\n          <AuthContextProvider>\r\n            <UserGuard admin>\r\n              <AdminForm />\r\n            </UserGuard>\r\n          </AuthContextProvider>\r\n        }\r\n      />\r\n      <Route\r\n        path={routes.addCategory}\r\n        element={\r\n          <AuthContextProvider>\r\n            <UserGuard admin>\r\n              <AddCategoryForm />\r\n            </UserGuard>\r\n          </AuthContextProvider>\r\n        }\r\n      />\r\n      <Route\r\n        path={routes.addItem}\r\n        element={\r\n          <AuthContextProvider>\r\n            <UserGuard admin>\r\n              <AddItemForm />\r\n            </UserGuard>\r\n          </AuthContextProvider>\r\n        }\r\n      />\r\n      <Route\r\n        path={routes.updateItem}\r\n        element={\r\n          <AuthContextProvider>\r\n            <UserGuard admin>\r\n              <UpdateItemForm />\r\n            </UserGuard>\r\n          </AuthContextProvider>\r\n        }\r\n      />\r\n      <Route\r\n        path={routes.deleteItem}\r\n        element={\r\n          <AuthContextProvider>\r\n            <UserGuard admin>\r\n              <DeleteItemForm />\r\n            </UserGuard>\r\n          </AuthContextProvider>\r\n        }\r\n      />\r\n    </Routes>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport { App } from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}